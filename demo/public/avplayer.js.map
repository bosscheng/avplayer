{"version":3,"file":"avplayer.js","sources":["../../src/render/baserender.js","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../node_modules/gl-matrix/esm/vec3.js","../../src/constant/index.js","../../src/render/rectmaskrender.js","../../src/render/webglrender.js","../../src/render/canvasrender.js","../../src/utils/logger.js","../../src/utils/events.js","../../src/utils/bitop.js","../../src/utils/specific.js","../../src/utils/av.js","../../src/demux/flvdemux.js","../../src/stream/fetchstream.js","../../src/mediacenter/index.js","../../src/utils/index.js","../../src/audio/audioplayer.js","../../src/avplayer.js"],"sourcesContent":["\r\n\r\nclass BaseRender {\r\n\r\n\r\n    constructor() {\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default BaseRender;","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","\r\n\r\n const AVType = {\r\n\r\n    Video: 0x1,\r\n    Audio: 0x2\r\n\r\n};\r\n\r\n const VideoType = {\r\n\r\n    H264: 0x1,\r\n    H265: 0x2\r\n\r\n};\r\n\r\nconst AudioType = {\r\n\r\n    PCM:   0x1,\r\n    PCMA:  0x2,\r\n    PCMU:  0x4,\r\n    AAC:   0x8\r\n\r\n};\r\n\r\nconst AACProfile = {\r\n    AAC_MAIN: 1,\r\n    AAC_LC: 2,\r\n    AAC_SSR: 3\r\n};\r\n\r\nconst PixelType = {\r\n\r\n    YUV:   0x1,\r\n    RGBA:  0x2,\r\n};\r\n\r\nconst ADTS_HEADER_SIZE = 7;\r\n\r\nconst AAC_SAMPLE_RATE = [\r\n    96000, 88200, 64000, 48000,\r\n    44100, 32000, 24000, 22050,\r\n    16000, 12000, 11025, 8000,\r\n    7350, 0, 0, 0\r\n  ];\r\n\r\n\r\n\r\n\r\nconst WORKER_SEND_TYPE = {\r\n    init: 'init',\r\n    setVideoCodec: 'setVideoCodec',\r\n    decodeVideo: 'decodeVideo',\r\n    setAudioCodec: 'setAudioCodec',\r\n    decodeAudio: 'decodeAudio',\r\n    close: 'close'\r\n}\r\n\r\n\r\nconst WORKER_EVENT_TYPE = {\r\n    created:'created',\r\n    inited:'inited',\r\n    videoInfo: 'videoInfo',\r\n    yuvData: 'yuvData',\r\n    audioInfo: 'audioInfo',\r\n    pcmData: 'pcmData'\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {AVType, VideoType, AudioType, PixelType, ADTS_HEADER_SIZE, AAC_SAMPLE_RATE, AACProfile, WORKER_SEND_TYPE, WORKER_EVENT_TYPE};","import BaseRender from \"./baserender.js\";\r\nimport {mat4,vec3}  from 'gl-matrix'\r\nimport { PixelType } from \"../constant/index.js\";\r\n\r\n\r\nconst vsSource = `\r\nattribute vec4 aVertexPosition;\r\nattribute vec2 aTexturePosition;\r\nuniform mat4 uModelMatrix;\r\nuniform mat4 uViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nvarying lowp vec2 vTexturePosition;\r\nvoid main(void) {\r\n  gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * aVertexPosition;\r\n  vTexturePosition = aTexturePosition;\r\n}\r\n`;\r\n\r\n// Fragment shader program\r\n\r\nconst fsSource = `\r\nprecision highp float;\r\nvarying highp vec2 vTexturePosition;\r\nuniform int isyuv;\r\nuniform sampler2D rgbaTexture; \r\nuniform sampler2D yTexture; \r\nuniform sampler2D uTexture; \r\nuniform sampler2D vTexture; \r\n\r\nconst mat4 YUV2RGB = mat4( 1.1643828125, 0, 1.59602734375, -.87078515625,\r\n                           1.1643828125, -.39176171875, -.81296875, .52959375,\r\n                           1.1643828125, 2.017234375, 0, -1.081390625,\r\n                           0, 0, 0, 1);\r\n\r\n\r\nvoid main(void) {\r\n\r\n    vec4 color;\r\n    vec4 alphacolor;\r\n\r\n    if (isyuv>0) {\r\n\r\n        highp float y = texture2D(yTexture,  vTexturePosition).r;\r\n        highp float u = texture2D(uTexture,  vTexturePosition).r;\r\n        highp float v = texture2D(vTexture,  vTexturePosition).r;\r\n        color = vec4(y, u, v, 1) * YUV2RGB;\r\n\r\n        highp float y1 = texture2D(yTexture,  vTexturePosition + vec2(0.5, 0)).r;\r\n        highp float u1 = texture2D(uTexture,  vTexturePosition + vec2(0.5, 0)).r;\r\n        highp float v1 = texture2D(vTexture,  vTexturePosition + vec2(0.5, 0)).r;\r\n        alphacolor = vec4(y1, u1, v1, 1) * YUV2RGB;\r\n\r\n    } else {\r\n      \r\n        color =   texture2D(uTexture, vTexturePosition);\r\n        alphacolor =   texture2D(uTexture, vTexturePosition + vec2(0.5, 0));\r\n\r\n    }\r\n\r\n    color.a = alphacolor.r;\r\n    gl_FragColor = color;\r\n}\r\n`;\r\n\r\n\r\nclass RectMaskRender extends BaseRender {\r\n\r\n    _gl = undefined;\r\n    _width = 0;\r\n    _height = 0;\r\n    _pixeltype = PixelType.YUV;\r\n\r\n    _textureWidth = 0;\r\n    _textureHeight = 0;\r\n    _programInfo = undefined;\r\n    _buffers = undefined;\r\n\r\n    constructor(gl, width, height) {\r\n\r\n        super();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this._gl = gl;\r\n        this._gl.pixelStorei(this._gl.UNPACK_ALIGNMENT, 1);\r\n\r\n      const shaderProgram = initShaderProgram(this._gl, vsSource, fsSource);\r\n    \r\n      this._programInfo  = {\r\n        program: shaderProgram,\r\n        attribLocations: {\r\n          vertexPosition: this._gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\r\n          texturePosition: this._gl.getAttribLocation(shaderProgram, 'aTexturePosition'),\r\n        },\r\n        uniformLocations: {\r\n          projectionMatrix: this._gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n          modelMatrix: this._gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\r\n          viewMatrix: this._gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\r\n          rgbatexture: this._gl.getUniformLocation(shaderProgram, 'rgbaTexture'),\r\n          ytexture: this._gl.getUniformLocation(shaderProgram, 'yTexture'),\r\n          utexture: this._gl.getUniformLocation(shaderProgram, 'uTexture'),\r\n          vtexture: this._gl.getUniformLocation(shaderProgram, 'vTexture'),\r\n          isyuv: this._gl.getUniformLocation(shaderProgram, 'isyuv'),\r\n        }\r\n      };\r\n    \r\n      // Here's where we call the routine that builds all the\r\n      // objects we'll be drawing.\r\n      this._buffers = initBuffers(this._gl);\r\n\r\n      this._rgbatexture = this.createTexture();\r\n      this._ytexture = this.createTexture();\r\n      this._utexture = this.createTexture();\r\n      this._vtexture = this.createTexture();\r\n\r\n    }\r\n\r\n\r\n    createTexture(){\r\n\r\n      let texture = this._gl.createTexture();\r\n      this._gl.bindTexture(this._gl.TEXTURE_2D, texture);\r\n  \r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\r\n\r\n      return texture;\r\n    }\r\n\r\n\r\n    updateTexture(pixeltype, pixelbuf, width, height) {\r\n\r\n        let gl = this._gl;\r\n\r\n        this._pixeltype = pixeltype;\r\n        this._textureWidth = width/2;\r\n        this._textureHeight = height;\r\n\r\n        if (pixeltype === PixelType.RGBA) {\r\n\r\n            let textunit = 3;\r\n            gl.activeTexture(gl.TEXTURE0 + textunit);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._rgbatexture);\r\n    \r\n            gl.texImage2D(gl.TEXTURE_2D,\r\n                0,                // mip level\r\n                gl.RGBA,          // internal format\r\n                width,                // width\r\n                height,                // height\r\n                0,                // border\r\n                gl.RGBA,          // format\r\n                gl.UNSIGNED_BYTE, // type\r\n                pixelbuf);\r\n\r\n        } else if (pixeltype === PixelType.YUV) {\r\n\r\n            let y = pixelbuf.slice(0, width*height);\r\n            let u = pixelbuf.slice(width*height, width*height*5/4);\r\n            let v = pixelbuf.slice(width*height*5/4, width*height*3/2);\r\n\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D,  this._ytexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width, height, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, y);\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._utexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width/2, height/2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, u);\r\n            gl.activeTexture(gl.TEXTURE2);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._vtexture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width/2, height/2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, v);\r\n\r\n        } else {\r\n\r\n            return;\r\n        }\r\n\r\n        this.drawScene()\r\n\r\n\r\n\r\n    }\r\n\r\n    drawScene() {\r\n\r\n        let gl = this._gl;\r\n        gl.viewport(0 , 0, this._width, this._height); \r\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);  // Clear to black, fully opaque\r\n        gl.clearDepth(1.0);                 // Clear everything\r\n        gl.enable(gl.DEPTH_TEST);           // Enable depth testing\r\n        gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\r\n      \r\n        // Clear the canvas before we start drawing on it.\r\n      \r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        \r\n        if (this._textureWidth === 0 || this._textureHeight === 0) {\r\n\r\n            gl.viewport(0 , 0, this._width, this._height);\r\n\r\n        } else {\r\n\r\n            if (this._textureWidth/this._textureHeight > this._width/this._height) {\r\n\r\n                let adjustHeight = this._textureHeight*this._width/this._textureWidth;\r\n                \r\n                gl.viewport(0 , (this._height-adjustHeight)/2, this._width, adjustHeight);\r\n\r\n            } else {\r\n\r\n            \r\n\r\n                let adjustWidth = this._textureWidth*this._height/this._textureHeight;\r\n                gl.viewport((this._width-adjustWidth)/2 , 0, adjustWidth, this._height);\r\n            }\r\n\r\n        }\r\n\r\n      \r\n        const zNear = 0.1;\r\n        const zFar = 100.0;\r\n        const projectionMatrix = mat4.create();\r\n         mat4.ortho(projectionMatrix, -1, 1, -1, 1, zNear, zFar);                 \r\n      \r\n        // Set the drawing position to the \"identity\" point, which is\r\n        // the center of the scene.\r\n        const modelMatrix = mat4.create();\r\n        mat4.identity(modelMatrix);\r\n      \r\n        const viewMatrix = mat4.create();\r\n        mat4.lookAt(viewMatrix, vec3.fromValues(0, 0, 0), vec3.fromValues(0, 0, -1), vec3.fromValues(0, 1, 0));\r\n      \r\n        // Tell WebGL how to pull out the positions from the position\r\n        // buffer into the vertexPosition attribute\r\n        {\r\n          const numComponents = 3;\r\n          const type = gl.FLOAT;\r\n          const normalize = false;\r\n          const stride = 0;\r\n          const offset = 0;\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.position);\r\n          gl.vertexAttribPointer(\r\n              this._programInfo.attribLocations.vertexPosition,\r\n              numComponents,\r\n              type,\r\n              normalize,\r\n              stride,\r\n              offset);\r\n          gl.enableVertexAttribArray(\r\n              this._programInfo.attribLocations.vertexPosition);\r\n        }\r\n      \r\n        // Tell WebGL how to pull out the colors from the color buffer\r\n        // into the vertexColor attribute.\r\n        {\r\n          const numComponents = 2;\r\n          const type = gl.FLOAT;\r\n          const normalize = false;\r\n          const stride = 0;\r\n          const offset = 0;\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.texposition);\r\n          gl.vertexAttribPointer(\r\n              this._programInfo.attribLocations.texturePosition,\r\n              numComponents,\r\n              type,\r\n              normalize,\r\n              stride,\r\n              offset);\r\n          gl.enableVertexAttribArray(\r\n              this._programInfo.attribLocations.texturePosition);\r\n        }\r\n      \r\n        let rgbatextunit = 2;\r\n        let ytextunit = rgbatextunit + 1;\r\n        let utextunit = rgbatextunit + 2;\r\n        let vtextunit = rgbatextunit + 3;\r\n\r\n        if (this._pixeltype === PixelType.YUV) {\r\n\r\n                  \r\n            gl.activeTexture(gl.TEXTURE0 + ytextunit);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._ytexture);\r\n            gl.activeTexture(gl.TEXTURE0 + utextunit);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._utexture);\r\n            gl.activeTexture(gl.TEXTURE0 + vtextunit);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._vtexture);\r\n\r\n        } else {\r\n\r\n            gl.activeTexture(gl.TEXTURE0 + rgbatextunit);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._rgbatexture);\r\n\r\n        }\r\n      \r\n\r\n        // Tell WebGL which indices to use to index the vertices\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._buffers.indices);\r\n      \r\n        // Tell WebGL to use our program when drawing\r\n      \r\n        gl.useProgram(this._programInfo.program);\r\n      \r\n        // Set the shader uniforms\r\n      \r\n        gl.uniformMatrix4fv(\r\n            this._programInfo.uniformLocations.projectionMatrix,\r\n            false,\r\n            projectionMatrix);\r\n      \r\n        gl.uniformMatrix4fv(\r\n            this._programInfo.uniformLocations.modelMatrix,\r\n            false,\r\n            modelMatrix);\r\n      \r\n            gl.uniformMatrix4fv(\r\n              this._programInfo.uniformLocations.viewMatrix,\r\n              false,\r\n              viewMatrix);\r\n      \r\n        gl.uniform1i(this._programInfo.uniformLocations.rgbatexture, rgbatextunit);\r\n        gl.uniform1i(this._programInfo.uniformLocations.ytexture, ytextunit);\r\n        gl.uniform1i(this._programInfo.uniformLocations.utexture, utextunit);\r\n        gl.uniform1i(this._programInfo.uniformLocations.vtexture, vtextunit);\r\n      \r\n        gl.uniform1i(this._programInfo.uniformLocations.isyuv, this._pixeltype === PixelType.YUV ? 1 : 0);\r\n      \r\n        {\r\n          const vertexCount = 6;\r\n          const type = gl.UNSIGNED_SHORT;\r\n          const offset = 0;\r\n          gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n        }\r\n      \r\n        // Update the rotation for the next draw\r\n      }\r\n\r\n\r\n    getRGBA() {\r\n\r\n        var pixels = new Uint8Array(this._width * this._height * 4)\r\n    \r\n        this._gl.readPixels(0, 0, this._width, this._height, this._gl.RGBA, this._gl.UNSIGNED_BYTE, pixels)\r\n\r\n        return pixels;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction initBuffers(gl) {\r\n\r\n  // Create a buffer for the cube's vertex positions.\r\n  const positionBuffer = gl.createBuffer();\r\n\r\n  // Select the positionBuffer as the one to apply buffer\r\n  // operations to from here out.\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n  // Now create an array of positions for the cube.\r\n\r\n  const positions = [\r\n    // Front face\r\n    -1.0, -1.0,  -1.0,\r\n     1.0, -1.0,  -1.0,\r\n     1.0,  1.0,  -1.0,\r\n    -1.0,  1.0,  -1.0,\r\n\r\n  ];\r\n\r\n  // Now pass the list of positions into WebGL to build the\r\n  // shape. We do this by creating a Float32Array from the\r\n  // JavaScript array, then use it to fill the current buffer.\r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n  // Now set up the colors for the faces. We'll use solid colors\r\n  // for each face.\r\n\r\n//   const facePos = [\r\n//     [0.0,  0.0],  \r\n//     [1.0,  0.0], \r\n//     [1.0,  1.0],    \r\n//     [0.0,  1.0]  \r\n//   ];\r\n\r\nconst facePos = [\r\n    [0.0,  1.0],\r\n    [0.5,  1.0],\r\n    [0.5,  0.0], \r\n    [0.0,  0.0]\r\n  ];\r\n\r\n  // Convert the array of colors into a table for all the vertices.\r\n\r\n  var texturePos = [];\r\n\r\n  texturePos =  texturePos.concat(...facePos);\r\n\r\n  const texpositionBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, texpositionBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texturePos), gl.STATIC_DRAW);\r\n\r\n  // Build the element array buffer; this specifies the indices\r\n  // into the vertex arrays for each face's vertices.\r\n\r\n  const indexBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n  // This array defines each face as two triangles, using the\r\n  // indices into the vertex array to specify each triangle's\r\n  // position.\r\n\r\n  const indices = [\r\n    0,  1,  2,  0,  2,  3\r\n  ];\r\n\r\n\r\n  // Now send the element array to GL\r\n\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\r\n      new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n  return {\r\n    position: positionBuffer,\r\n    texposition: texpositionBuffer,\r\n    indices: indexBuffer\r\n  };\r\n}\r\n\r\n\r\n//\r\n// Initialize a shader program, so WebGL knows how to draw our data\r\n//\r\nfunction initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n  // Create the shader program\r\n\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n\r\n  // If creating the shader program failed, alert\r\n\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    console.log('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n\r\n  return shaderProgram;\r\n}\r\n\r\n//\r\n// creates a shader of the given type, uploads the source and\r\n// compiles it.\r\n//\r\nfunction loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n\r\n  // Send the source to the shader object\r\n\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader program\r\n\r\n  gl.compileShader(shader);\r\n\r\n  // See if it compiled successfully\r\n\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    console.log('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n\r\nexport default RectMaskRender;","import CubeRender from \"./cuberender.js\";\r\nimport RectRender from \"./rectrender.js\";\r\nimport BaseRender from \"./baserender.js\";\r\nimport CylinderRender from \"./cylinderrender.js\";\r\nimport HemisphereRender from \"./hemisphererender.js\"\r\nimport RectMaskRender from \"./rectmaskrender.js\";\r\nimport RectGreenRender from \"./rectgreenrender.js\";\r\n\r\nfunction createContextGL($canvas) {\r\n    let gl = null;\r\n\r\n    const validContextNames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\r\n    let nameIndex = 0;\r\n\r\n    while (!gl && nameIndex < validContextNames.length) {\r\n        const contextName = validContextNames[nameIndex];\r\n\r\n        try {\r\n            let contextOptions = {preserveDrawingBuffer: true};\r\n            gl = $canvas.getContext(contextName, contextOptions);\r\n        } catch (e) {\r\n            gl = null;\r\n        }\r\n\r\n        if (!gl || typeof gl.getParameter !== \"function\") {\r\n            gl = null;\r\n        }\r\n\r\n        ++nameIndex;\r\n    }\r\n\r\n\r\n    return gl;\r\n}\r\n\r\nclass WebGLRender {\r\n\r\n    _gl;\r\n\r\n    _render;\r\n\r\n    constructor(canvas) {\r\n\r\n        this._gl = createContextGL(canvas);\r\n\r\n        this._render = new RectMaskRender(this._gl, canvas.width, canvas.height);\r\n\r\n    }\r\n\r\n    \r\n    updateTexture(pixeltype, pixelbuf, width, height) {\r\n\r\n        this._render.updateTexture(pixeltype, pixelbuf, width, height);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default WebGLRender;","\r\nimport WebGLRender from \"./webglrender.js\";\r\n\r\n\r\nclass CanvasRender {\r\n\r\n    _avplayer;\r\n\r\n    _webglrender;\r\n\r\n    constructor(avplayer) {\r\n\r\n        this._avplayer = avplayer;\r\n        \r\n        let canvasElement = document.createElement(\"canvas\");\r\n        canvasElement.style.position = \"absolute\";\r\n        canvasElement.style.top = '0px';\r\n        canvasElement.style.left = '0px';\r\n\r\n        canvasElement.width = 1080;\r\n        canvasElement.height = 960;\r\n\r\n        this._videoElement = canvasElement;\r\n        avplayer._container.appendChild(this._videoElement);\r\n\r\n        this._webglrender = new WebGLRender(canvasElement, canvasElement.width, canvasElement.height)\r\n\r\n    }\r\n\r\n    updateTexture(pixeltype, pixelbuf, width, height) {\r\n\r\n        this._webglrender.updateTexture(pixeltype, pixelbuf, width, height);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default CanvasRender;","\r\n\r\nclass Logger {\r\n\r\n    _logEnable = false; \r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setLogEnable(logEnable) {\r\n\r\n        this._logEnable = logEnable;\r\n    }\r\n\r\n    info(module, ...args)  {\r\n        if (this._logEnable) {\r\n            console.log(`AVPlayer: [${module}]`, ...args);\r\n        }\r\n    }\r\n\r\n    warn (module, ...args) {\r\n        if (this._logEnable) {\r\n            console.warn(`AVPlayer: [${module}]`, ...args);\r\n        }\r\n    }\r\n\r\n    error(module, ...args) {\r\n        if (this._logEnable) {\r\n            console.error(`AVPlayer: [${module}]`, ...args);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Logger;\r\n","class EventEmitter {\r\n    on(name, fn, ctx) {\r\n        const e = this.e || (this.e = {});\r\n        (e[name] || (e[name] = [])).push({fn, ctx});\r\n        return this;\r\n    }\r\n\r\n    once(name, fn, ctx) {\r\n        const self = this;\r\n\r\n        function listener(...args) {\r\n            self.off(name, listener);\r\n            fn.apply(ctx, args);\r\n        }\r\n\r\n        listener._ = fn;\r\n        return this.on(name, listener, ctx);\r\n    }\r\n\r\n    emit(name, ...data) {\r\n        const evtArr = ((this.e || (this.e = {}))[name] || []).slice();\r\n        for (let i = 0; i < evtArr.length; i += 1) {\r\n            evtArr[i].fn.apply(evtArr[i].ctx, data);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    off(name, callback) {\r\n        const e = this.e || (this.e = {});\r\n\r\n        if (!name) {\r\n            Object.keys(e).forEach((key) => {\r\n                delete e[key];\r\n            })\r\n            delete this.e\r\n            return;\r\n        }\r\n\r\n        const evts = e[name];\r\n        const liveEvents = [];\r\n        if (evts && callback) {\r\n            for (let i = 0, len = evts.length; i < len; i += 1) {\r\n                if (evts[i].fn !== callback && evts[i].fn._ !== callback) liveEvents.push(evts[i]);\r\n            }\r\n        }\r\n        if (liveEvents.length) {\r\n            e[name] = liveEvents;\r\n        } else {\r\n            delete e[name];\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nexport default  EventEmitter;","\r\nclass Bitop {\r\n    \r\n    constructor(buffer) {\r\n      this.buffer = buffer;\r\n      this.buflen = buffer.length;\r\n      this.bufpos = 0;\r\n      this.bufoff = 0;\r\n      this.iserro = false;\r\n    }\r\n  \r\n    read(n) {\r\n      let v = 0;\r\n      let d = 0;\r\n      while (n) {\r\n        if (n < 0 || this.bufpos >= this.buflen) {\r\n          this.iserro = true;\r\n          return 0;\r\n        }\r\n  \r\n        this.iserro = false;\r\n        d = this.bufoff + n > 8 ? 8 - this.bufoff : n;\r\n  \r\n        v <<= d;\r\n        v += (this.buffer[this.bufpos] >> (8 - this.bufoff - d)) & (0xff >> (8 - d));\r\n  \r\n        this.bufoff += d;\r\n        n -= d;\r\n  \r\n        if (this.bufoff == 8) {\r\n          this.bufpos++;\r\n          this.bufoff = 0;\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n  \r\n    look(n) {\r\n      let p = this.bufpos;\r\n      let o = this.bufoff;\r\n      let v = this.read(n);\r\n      this.bufpos = p;\r\n      this.bufoff = o;\r\n      return v;\r\n    }\r\n  \r\n    read_golomb() {\r\n      let n;\r\n      for (n = 0; this.read(1) == 0 && !this.iserro; n++);\r\n      return (1 << n) + this.read(n) - 1;\r\n    }\r\n  }\r\n  \r\n  export default Bitop;\r\n  ","//\r\n//  Created by Mingliang Chen on 17/12/21.\r\n//  illuspas[a]gmail.com\r\n//  Copyright (c) 2018 Nodemedia. All rights reserved.\r\n//\r\n\r\nimport Bitop from './bitop.js';\r\n\r\nconst AAC_SAMPLE_RATE = [\r\n  96000, 88200, 64000, 48000,\r\n  44100, 32000, 24000, 22050,\r\n  16000, 12000, 11025, 8000,\r\n  7350, 0, 0, 0\r\n];\r\n\r\nconst AAC_CHANNELS = [\r\n  0, 1, 2, 3, 4, 5, 6, 8\r\n];\r\n\r\nconst AUDIO_CODEC_NAME = [\r\n  '',\r\n  'ADPCM',\r\n  'MP3',\r\n  'LinearLE',\r\n  'Nellymoser16',\r\n  'Nellymoser8',\r\n  'Nellymoser',\r\n  'G711A',\r\n  'G711U',\r\n  '',\r\n  'AAC',\r\n  'Speex',\r\n  '',\r\n  'OPUS',\r\n  'MP3-8K',\r\n  'DeviceSpecific',\r\n  'Uncompressed'\r\n];\r\n\r\nconst AUDIO_SOUND_RATE = [\r\n  5512, 11025, 22050, 44100\r\n];\r\n\r\nconst VIDEO_CODEC_NAME = [\r\n  '',\r\n  'Jpeg',\r\n  'Sorenson-H263',\r\n  'ScreenVideo',\r\n  'On2-VP6',\r\n  'On2-VP6-Alpha',\r\n  'ScreenVideo2',\r\n  'H264',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  'H265'\r\n];\r\n\r\nfunction getObjectType(bitop) {\r\n  let audioObjectType = bitop.read(5);\r\n  if (audioObjectType === 31) {\r\n    audioObjectType = bitop.read(6) + 32;\r\n  }\r\n  return audioObjectType;\r\n}\r\n\r\nfunction getSampleRate(bitop, info) {\r\n  info.sampling_index = bitop.read(4);\r\n  return info.sampling_index == 0x0f ? bitop.read(24) : AAC_SAMPLE_RATE[info.sampling_index];\r\n}\r\n\r\nfunction readAACSpecificConfig(aacSequenceHeader) {\r\n  let info = {};\r\n  let bitop = new Bitop(aacSequenceHeader);\r\n  bitop.read(16);\r\n  info.object_type = getObjectType(bitop);\r\n  info.sample_rate = getSampleRate(bitop, info);\r\n  info.chan_config = bitop.read(4);\r\n  if (info.chan_config < AAC_CHANNELS.length) {\r\n    info.channels = AAC_CHANNELS[info.chan_config];\r\n  }\r\n  info.sbr = -1;\r\n  info.ps = -1;\r\n  if (info.object_type == 5 || info.object_type == 29) {\r\n    if (info.object_type == 29) {\r\n      info.ps = 1;\r\n    }\r\n    info.ext_object_type = 5;\r\n    info.sbr = 1;\r\n    info.sample_rate = getSampleRate(bitop, info);\r\n    info.object_type = getObjectType(bitop);\r\n  }\r\n\r\n  return info;\r\n}\r\n\r\nfunction getAACProfileName(info) {\r\n  switch (info.object_type) {\r\n    case 1:\r\n      return 'Main';\r\n    case 2:\r\n      if (info.ps > 0) {\r\n        return 'HEv2';\r\n      }\r\n      if (info.sbr > 0) {\r\n        return 'HE';\r\n      }\r\n      return 'LC';\r\n    case 3:\r\n      return 'SSR';\r\n    case 4:\r\n      return 'LTP';\r\n    case 5:\r\n      return 'SBR';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction readH264SpecificConfig(avcSequenceHeader) {\r\n  let info = {};\r\n  let profile_idc, width, height, crop_left, crop_right,\r\n    crop_top, crop_bottom, frame_mbs_only, n, cf_idc,\r\n    num_ref_frames;\r\n  let bitop = new Bitop(avcSequenceHeader);\r\n  bitop.read(48);\r\n  info.width = 0;\r\n  info.height = 0;\r\n\r\n  do {\r\n    info.profile = bitop.read(8);\r\n    info.compat = bitop.read(8);\r\n    info.level = bitop.read(8);\r\n    info.nalu = (bitop.read(8) & 0x03) + 1;\r\n    info.nb_sps = bitop.read(8) & 0x1F;\r\n    if (info.nb_sps == 0) {\r\n      break;\r\n    }\r\n    /* nal size */\r\n    bitop.read(16);\r\n\r\n    /* nal type */\r\n    if (bitop.read(8) != 0x67) {\r\n      break;\r\n    }\r\n    /* SPS */\r\n    profile_idc = bitop.read(8);\r\n\r\n    /* flags */\r\n    bitop.read(8);\r\n\r\n    /* level idc */\r\n    bitop.read(8);\r\n\r\n    /* SPS id */\r\n    bitop.read_golomb();\r\n\r\n    if (profile_idc == 100 || profile_idc == 110 ||\r\n      profile_idc == 122 || profile_idc == 244 || profile_idc == 44 ||\r\n      profile_idc == 83 || profile_idc == 86 || profile_idc == 118) {\r\n      /* chroma format idc */\r\n      cf_idc = bitop.read_golomb();\r\n\r\n      if (cf_idc == 3) {\r\n\r\n        /* separate color plane */\r\n        bitop.read(1);\r\n      }\r\n\r\n      /* bit depth luma - 8 */\r\n      bitop.read_golomb();\r\n\r\n      /* bit depth chroma - 8 */\r\n      bitop.read_golomb();\r\n\r\n      /* qpprime y zero transform bypass */\r\n      bitop.read(1);\r\n\r\n      /* seq scaling matrix present */\r\n      if (bitop.read(1)) {\r\n\r\n        for (n = 0; n < (cf_idc != 3 ? 8 : 12); n++) {\r\n\r\n          /* seq scaling list present */\r\n          if (bitop.read(1)) {\r\n\r\n            /* TODO: scaling_list()\r\n            if (n < 6) {\r\n            } else {\r\n            }\r\n            */\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /* log2 max frame num */\r\n    bitop.read_golomb();\r\n\r\n    /* pic order cnt type */\r\n    switch (bitop.read_golomb()) {\r\n      case 0:\r\n\r\n        /* max pic order cnt */\r\n        bitop.read_golomb();\r\n        break;\r\n\r\n      case 1:\r\n\r\n        /* delta pic order alwys zero */\r\n        bitop.read(1);\r\n\r\n        /* offset for non-ref pic */\r\n        bitop.read_golomb();\r\n\r\n        /* offset for top to bottom field */\r\n        bitop.read_golomb();\r\n\r\n        /* num ref frames in pic order */\r\n        num_ref_frames = bitop.read_golomb();\r\n\r\n        for (n = 0; n < num_ref_frames; n++) {\r\n\r\n          /* offset for ref frame */\r\n          bitop.read_golomb();\r\n        }\r\n    }\r\n\r\n    /* num ref frames */\r\n    info.avc_ref_frames = bitop.read_golomb();\r\n\r\n    /* gaps in frame num allowed */\r\n    bitop.read(1);\r\n\r\n    /* pic width in mbs - 1 */\r\n    width = bitop.read_golomb();\r\n\r\n    /* pic height in map units - 1 */\r\n    height = bitop.read_golomb();\r\n\r\n    /* frame mbs only flag */\r\n    frame_mbs_only = bitop.read(1);\r\n\r\n    if (!frame_mbs_only) {\r\n\r\n      /* mbs adaprive frame field */\r\n      bitop.read(1);\r\n    }\r\n\r\n    /* direct 8x8 inference flag */\r\n    bitop.read(1);\r\n\r\n    /* frame cropping */\r\n    if (bitop.read(1)) {\r\n\r\n      crop_left = bitop.read_golomb();\r\n      crop_right = bitop.read_golomb();\r\n      crop_top = bitop.read_golomb();\r\n      crop_bottom = bitop.read_golomb();\r\n\r\n    } else {\r\n      crop_left = 0;\r\n      crop_right = 0;\r\n      crop_top = 0;\r\n      crop_bottom = 0;\r\n    }\r\n    info.level = info.level / 10.0;\r\n    info.width = (width + 1) * 16 - (crop_left + crop_right) * 2;\r\n    info.height = (2 - frame_mbs_only) * (height + 1) * 16 - (crop_top + crop_bottom) * 2;\r\n\r\n  } while (0);\r\n\r\n  return info;\r\n}\r\n\r\nfunction HEVCParsePtl(bitop, hevc, max_sub_layers_minus1) {\r\n  let general_ptl = {};\r\n\r\n  general_ptl.profile_space = bitop.read(2);\r\n  general_ptl.tier_flag = bitop.read(1);\r\n  general_ptl.profile_idc = bitop.read(5);\r\n  general_ptl.profile_compatibility_flags = bitop.read(32);\r\n  general_ptl.general_progressive_source_flag = bitop.read(1);\r\n  general_ptl.general_interlaced_source_flag = bitop.read(1);\r\n  general_ptl.general_non_packed_constraint_flag = bitop.read(1);\r\n  general_ptl.general_frame_only_constraint_flag = bitop.read(1);\r\n  bitop.read(32);\r\n  bitop.read(12);\r\n  general_ptl.level_idc = bitop.read(8);\r\n\r\n  general_ptl.sub_layer_profile_present_flag = [];\r\n  general_ptl.sub_layer_level_present_flag = [];\r\n\r\n  for (let i = 0; i < max_sub_layers_minus1; i++) {\r\n    general_ptl.sub_layer_profile_present_flag[i] = bitop.read(1);\r\n    general_ptl.sub_layer_level_present_flag[i] = bitop.read(1);\r\n  }\r\n\r\n  if (max_sub_layers_minus1 > 0) {\r\n    for (let i = max_sub_layers_minus1; i < 8; i++) {\r\n      bitop.read(2);\r\n    }\r\n  }\r\n\r\n  general_ptl.sub_layer_profile_space = [];\r\n  general_ptl.sub_layer_tier_flag = [];\r\n  general_ptl.sub_layer_profile_idc = [];\r\n  general_ptl.sub_layer_profile_compatibility_flag = [];\r\n  general_ptl.sub_layer_progressive_source_flag = [];\r\n  general_ptl.sub_layer_interlaced_source_flag = [];\r\n  general_ptl.sub_layer_non_packed_constraint_flag = [];\r\n  general_ptl.sub_layer_frame_only_constraint_flag = [];\r\n  general_ptl.sub_layer_level_idc = [];\r\n\r\n  for (let i = 0; i < max_sub_layers_minus1; i++) {\r\n    if (general_ptl.sub_layer_profile_present_flag[i]) {\r\n      general_ptl.sub_layer_profile_space[i] = bitop.read(2);\r\n      general_ptl.sub_layer_tier_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_profile_idc[i] = bitop.read(5);\r\n      general_ptl.sub_layer_profile_compatibility_flag[i] = bitop.read(32);\r\n      general_ptl.sub_layer_progressive_source_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_interlaced_source_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_non_packed_constraint_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_frame_only_constraint_flag[i] = bitop.read(1);\r\n      bitop.read(32);\r\n      bitop.read(12);\r\n    }\r\n    if (general_ptl.sub_layer_level_present_flag[i]) {\r\n      general_ptl.sub_layer_level_idc[i] = bitop.read(8);\r\n    }\r\n    else {\r\n      general_ptl.sub_layer_level_idc[i] = 1;\r\n    }\r\n  }\r\n  return general_ptl;\r\n}\r\n\r\nfunction HEVCParseSPS(SPS, hevc) {\r\n  let psps = {};\r\n  let NumBytesInNALunit = SPS.length;\r\n  let NumBytesInRBSP = 0;\r\n  let rbsp_array = [];\r\n  let bitop = new Bitop(SPS);\r\n\r\n  bitop.read(1);//forbidden_zero_bit\r\n  bitop.read(6);//nal_unit_type\r\n  bitop.read(6);//nuh_reserved_zero_6bits\r\n  bitop.read(3);//nuh_temporal_id_plus1\r\n\r\n  for (let i = 2; i < NumBytesInNALunit; i++) {\r\n    if (i + 2 < NumBytesInNALunit && bitop.look(24) == 0x000003) {\r\n      rbsp_array.push(bitop.read(8));\r\n      rbsp_array.push(bitop.read(8));\r\n      i += 2;\r\n      let emulation_prevention_three_byte = bitop.read(8); /* equal to 0x03 */\r\n    } else {\r\n      rbsp_array.push(bitop.read(8));\r\n    }\r\n  }\r\n  let rbsp =  new Uint8Array(rbsp_array);\r\n  let rbspBitop = new Bitop(rbsp);\r\n  psps.sps_video_parameter_set_id = rbspBitop.read(4);\r\n  psps.sps_max_sub_layers_minus1 = rbspBitop.read(3);\r\n  psps.sps_temporal_id_nesting_flag = rbspBitop.read(1);\r\n  psps.profile_tier_level = HEVCParsePtl(rbspBitop, hevc, psps.sps_max_sub_layers_minus1);\r\n  psps.sps_seq_parameter_set_id = rbspBitop.read_golomb();\r\n  psps.chroma_format_idc = rbspBitop.read_golomb();\r\n  if (psps.chroma_format_idc == 3) {\r\n    psps.separate_colour_plane_flag = rbspBitop.read(1);\r\n  } else {\r\n    psps.separate_colour_plane_flag = 0;\r\n  }\r\n  psps.pic_width_in_luma_samples = rbspBitop.read_golomb();\r\n  psps.pic_height_in_luma_samples = rbspBitop.read_golomb();\r\n  psps.conformance_window_flag = rbspBitop.read(1);\r\n  if (psps.conformance_window_flag) {\r\n    let vert_mult = 1 + (psps.chroma_format_idc < 2);\r\n    let horiz_mult = 1 + (psps.chroma_format_idc < 3);\r\n    psps.conf_win_left_offset = rbspBitop.read_golomb() * horiz_mult;\r\n    psps.conf_win_right_offset = rbspBitop.read_golomb() * horiz_mult;\r\n    psps.conf_win_top_offset = rbspBitop.read_golomb() * vert_mult;\r\n    psps.conf_win_bottom_offset = rbspBitop.read_golomb() * vert_mult;\r\n  }\r\n  // Logger.debug(psps);\r\n  return psps;\r\n}\r\n\r\nfunction readHEVCSpecificConfig(hevcSequenceHeader) {\r\n  let info = {};\r\n  info.width = 0;\r\n  info.height = 0;\r\n  info.profile = 0;\r\n  info.level = 0;\r\n  // let bitop = new Bitop(hevcSequenceHeader);\r\n  // bitop.read(48);\r\n  hevcSequenceHeader = hevcSequenceHeader.slice(5);\r\n\r\n  do {\r\n    let hevc = {};\r\n    if (hevcSequenceHeader.length < 23) {\r\n      break;\r\n    }\r\n\r\n    hevc.configurationVersion = hevcSequenceHeader[0];\r\n    if (hevc.configurationVersion != 1) {\r\n      break;\r\n    }\r\n    hevc.general_profile_space = (hevcSequenceHeader[1] >> 6) & 0x03;\r\n    hevc.general_tier_flag = (hevcSequenceHeader[1] >> 5) & 0x01;\r\n    hevc.general_profile_idc = hevcSequenceHeader[1] & 0x1F;\r\n    hevc.general_profile_compatibility_flags = (hevcSequenceHeader[2] << 24) | (hevcSequenceHeader[3] << 16) | (hevcSequenceHeader[4] << 8) | hevcSequenceHeader[5];\r\n    hevc.general_constraint_indicator_flags = ((hevcSequenceHeader[6] << 24) | (hevcSequenceHeader[7] << 16) | (hevcSequenceHeader[8] << 8) | hevcSequenceHeader[9]);\r\n    hevc.general_constraint_indicator_flags = (hevc.general_constraint_indicator_flags << 16) | (hevcSequenceHeader[10] << 8) | hevcSequenceHeader[11];\r\n    hevc.general_level_idc = hevcSequenceHeader[12];\r\n    hevc.min_spatial_segmentation_idc = ((hevcSequenceHeader[13] & 0x0F) << 8) | hevcSequenceHeader[14];\r\n    hevc.parallelismType = hevcSequenceHeader[15] & 0x03;\r\n    hevc.chromaFormat = hevcSequenceHeader[16] & 0x03;\r\n    hevc.bitDepthLumaMinus8 = hevcSequenceHeader[17] & 0x07;\r\n    hevc.bitDepthChromaMinus8 = hevcSequenceHeader[18] & 0x07;\r\n    hevc.avgFrameRate = (hevcSequenceHeader[19] << 8) | hevcSequenceHeader[20];\r\n    hevc.constantFrameRate = (hevcSequenceHeader[21] >> 6) & 0x03;\r\n    hevc.numTemporalLayers = (hevcSequenceHeader[21] >> 3) & 0x07;\r\n    hevc.temporalIdNested = (hevcSequenceHeader[21] >> 2) & 0x01;\r\n    hevc.lengthSizeMinusOne = hevcSequenceHeader[21] & 0x03;\r\n    let numOfArrays = hevcSequenceHeader[22];\r\n    let p = hevcSequenceHeader.slice(23);\r\n    for (let i = 0; i < numOfArrays; i++) {\r\n      if (p.length < 3) {\r\n        brak;\r\n      }\r\n      let nalutype = p[0];\r\n      let n = (p[1]) << 8 | p[2];\r\n      // Logger.debug(nalutype, n);\r\n      p = p.slice(3);\r\n      for (let j = 0; j < n; j++) {\r\n        if (p.length < 2) {\r\n          break;\r\n        }\r\n        let k = (p[0] << 8) | p[1];\r\n        // Logger.debug('k', k);\r\n        if (p.length < 2 + k) {\r\n          break;\r\n        }\r\n        p = p.slice(2);\r\n        if (nalutype == 33) {\r\n          //SPS\r\n          let sps = new Uint8Array(k);\r\n          sps.set(p.slice(0, k), 0);\r\n          // Logger.debug(sps, sps.length);\r\n          hevc.psps = HEVCParseSPS(sps, hevc);\r\n          info.profile = hevc.general_profile_idc;\r\n          info.level = hevc.general_level_idc / 30.0;\r\n          info.width = hevc.psps.pic_width_in_luma_samples - (hevc.psps.conf_win_left_offset + hevc.psps.conf_win_right_offset);\r\n          info.height = hevc.psps.pic_height_in_luma_samples - (hevc.psps.conf_win_top_offset + hevc.psps.conf_win_bottom_offset);\r\n        }\r\n        p = p.slice(k);\r\n      }\r\n    }\r\n  } while (0);\r\n\r\n  return info;\r\n}\r\n\r\nfunction readAVCSpecificConfig(avcSequenceHeader) {\r\n  let codec_id = avcSequenceHeader[0] & 0x0f;\r\n  if (codec_id == 7) {\r\n    return readH264SpecificConfig(avcSequenceHeader);\r\n  } else if (codec_id == 12) {\r\n    return readHEVCSpecificConfig(avcSequenceHeader);\r\n  }\r\n}\r\n\r\n\r\nfunction getAVCProfileName(info) {\r\n  switch (info.profile) {\r\n    case 1:\r\n      return 'Main';\r\n    case 2:\r\n      return 'Main 10';\r\n    case 3:\r\n      return 'Main Still Picture';\r\n    case 66:\r\n      return 'Baseline';\r\n    case 77:\r\n      return 'Main';\r\n    case 100:\r\n      return 'High';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\n\r\nexport {\r\n  AUDIO_SOUND_RATE,\r\n  AUDIO_CODEC_NAME,\r\n  VIDEO_CODEC_NAME,\r\n  readAACSpecificConfig,\r\n  getAACProfileName,\r\n  readAVCSpecificConfig,\r\n  getAVCProfileName\r\n};\r\n","\r\nclass AVPacket {\r\n\r\n    payload;\r\n    avtype;\r\n    timestamp;\r\n    nals;\r\n    iskeyframe;\r\n    \r\n}\r\n\r\n\r\nclass VideoInfo {\r\n\r\n    vtype;\r\n    width;\r\n    height;\r\n    extradata;\r\n}\r\n\r\n\r\nclass AudioInfo {\r\n\r\n    atype;\r\n    sample;\r\n    channels;\r\n    depth;\r\n    profile;\r\n    extradata;\r\n   \r\n}\r\n\r\n\r\n\r\nexport {AVPacket, VideoInfo, AudioInfo};","import EventEmitter from '../utils/events.js';\r\nimport { readAACSpecificConfig, getAACProfileName, readAVCSpecificConfig, getAVCProfileName } from '../utils/specific.js';\r\nimport {AVPacket, VideoInfo, AudioInfo} from '../utils/av.js';\r\nimport {AVType, VideoType, AudioType, PixelType, ADTS_HEADER_SIZE, AAC_SAMPLE_RATE, AACProfile} from '../constant'\r\n\r\n\r\n\r\nconst FLV_MEDIA_TYPE = {\r\n    Audio: 8,\r\n    Video: 9,\r\n    Script: 18\r\n}\r\n\r\nconst CodecID = {\r\n\r\n    AVC : 7, //h264\r\n    HEVC : 12 //h265\r\n\r\n}\r\n\r\nconst FrameType = {\r\n\r\n    KeyFrame : 1,\r\n    InterFrame : 2\r\n\r\n}\r\n\r\nconst AVCPacketType = {\r\n\r\n    AVCSequenceHeader : 0,\r\n    AVCNalu : 1,\r\n    \r\n}\r\n\r\n\r\nconst SoundFormat = {\r\n\r\n    G711A : 7,\r\n    G711U : 8,\r\n    AAC : 10\r\n}\r\n\r\nconst SoundRate = {\r\n\r\n    E5_5HZ : 0,\r\n    E11HZ : 1,\r\n    E22HZ : 2,\r\n    E44HZ : 3\r\n\r\n}\r\n\r\nconst SoundSize = {\r\n\r\n    E8BITS : 0,\r\n    E16BITS : 1\r\n\r\n}\r\n\r\nconst SoundType = {\r\n\r\n    Mono : 0,\r\n    Stereo : 1\r\n\r\n}\r\n\r\nconst AACPackettype = {\r\n\r\n    AACSequenceHeader : 0,\r\n    AACRaw : 1\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst FLV_Parse_State = {\r\n    Init: 0,\r\n    TagCommerHeader: 1,\r\n    TagPayload:2\r\n}\r\n\r\nclass FLVDemux extends EventEmitter {\r\n\r\n    _buffer = undefined;\r\n\r\n    _needlen = 0;\r\n    _state = 0;\r\n    _tagtype = 0;\r\n    _dts = 0;\r\n    _pts = 0;\r\n\r\n    _videoinfo;\r\n    _audioinfo;\r\n\r\n    constructor(avplayer) {\r\n\r\n        super();\r\n\r\n        this._avplayer = avplayer;\r\n\r\n        this._videoinfo = new VideoInfo();\r\n        this._audioinfo = new AudioInfo();\r\n\r\n        this._state = FLV_Parse_State.Init;\r\n        this._needlen = 9;\r\n        \r\n    }\r\n\r\n    \r\n    dispatch(data) {\r\n\r\n        let remain = data;\r\n\r\n        if (this._buffer) {\r\n\r\n            let newbuffer = new Uint8Array(this._buffer.length + data.length);\r\n            newbuffer.set(this._buffer, 0);\r\n            newbuffer.set(data, this._buffer.length);\r\n\r\n            remain = newbuffer;\r\n            this._buffer = undefined;\r\n        }\r\n\r\n        const tmp = new ArrayBuffer(4);\r\n        const dv = new DataView(tmp);\r\n\r\n        while(true) {\r\n\r\n            if (remain.length < this._needlen) {\r\n\r\n                break;\r\n            }\r\n\r\n            if (this._state === FLV_Parse_State.Init) {\r\n\r\n                let flvheader = remain.slice(0, this._needlen);\r\n                remain = remain.slice(this._needlen);\r\n\r\n                this._needlen = 15;\r\n                this._state = FLV_Parse_State.TagCommerHeader;\r\n                \r\n            } else if (this._state === FLV_Parse_State.TagCommerHeader) {\r\n\r\n                this._tagtype = remain[4]&0x1F; // 5bit代表类型,8:audio 9:video 18:script other:其他\r\n\r\n                dv.setUint8(0, remain[7]);\r\n                dv.setUint8(1, remain[6]);\r\n                dv.setUint8(2, remain[5]);\r\n                dv.setUint8(3, 0);\r\n\r\n                let payloadlen = dv.getUint32(0, true); //Tag 中除通用头外的长度，即 Header + Data 字段的长度 (等于 Tag 总长度 – 11)\r\n\r\n                dv.setUint8(0, remain[10]);\r\n                dv.setUint8(1, remain[9]);\r\n                dv.setUint8(2, remain[8]);\r\n                dv.setUint8(3, remain[11]);\r\n\r\n                this._dts = dv.getInt32(0, true);\r\n\r\n                let tagcommonheader = remain.slice(0, this._needlen);\r\n                remain = remain.slice(this._needlen);\r\n\r\n                this._needlen = payloadlen;\r\n                this._state = FLV_Parse_State.TagPayload;\r\n\r\n            } else {\r\n\r\n                if (this._tagtype === FLV_MEDIA_TYPE.Video) {\r\n\r\n                    let frametype = (remain[0]>>4)&0x0F;\r\n                    let codecid = (remain[0])&0x0F;\r\n\r\n                    if (codecid === CodecID.AVC || codecid === CodecID.HEVC) {\r\n\r\n                        let avcpackettype = remain[1];\r\n\r\n                        dv.setUint8(0, remain[4]);\r\n                        dv.setUint8(1, remain[3]);\r\n                        dv.setUint8(2, remain[2]);\r\n                        dv.setUint8(3, 0);\r\n\r\n                        let compositiontime = dv.getInt32(0, true);\r\n                        this._pts = this._dts + compositiontime;\r\n\r\n                        if (frametype === FrameType.KeyFrame) {\r\n\r\n                            if (avcpackettype === AVCPacketType.AVCSequenceHeader) {\r\n\r\n                                 let obj = ParseSPSAndPPS(remain.slice(0, this._needlen));\r\n\r\n                                 this._sps = obj.sps;\r\n                                 this._pps = obj.pps;\r\n\r\n                                 this._avplayer._logger.info('FlvDemux', `parse sps:${this._sps[0]&0x1F} pps:${this._pps[0]&0x1F}`)\r\n\r\n                                //avcseq\r\n                                let info = readAVCSpecificConfig(remain.slice(0, this._needlen));\r\n\r\n                                this._videoinfo.vtype = codecid === CodecID.AVC ? VideoType.H264 : VideoType.H265;\r\n                                this._videoinfo.width = info.width;\r\n                                this._videoinfo.height = info.height\r\n                                this._videoinfo.extradata = remain.slice(5, this._needlen);\r\n            \r\n                                this.emit('videoinfo', this._videoinfo);\r\n\r\n                            } else if (avcpackettype === AVCPacketType.AVCNalu) {\r\n                                //I Frame\r\n                                let vframe = remain.slice(5, this._needlen);\r\n\r\n                                let packet = new AVPacket();\r\n                                packet.payload = vframe;\r\n                                packet.iskeyframe = true;\r\n                                packet.timestamp = this._pts;\r\n                                packet.avtype = AVType.Video;\r\n                                packet.nals = SplitBufferToNals(vframe);\r\n            \r\n                                this.emit('videodata', packet);\r\n\r\n                            } else {\r\n\r\n\r\n                            }\r\n\r\n\r\n                        } else if (frametype === FrameType.InterFrame) {\r\n\r\n                            if (avcpackettype === AVCPacketType.AVCNalu) {\r\n\r\n                                //P Frame\r\n                                let vframe = remain.slice(5, this._needlen);\r\n\r\n                                \r\n                                let packet = new AVPacket();\r\n                                packet.payload = convertAVCCtoAnnexB(vframe);\r\n                                packet.iskeyframe = false;\r\n                                packet.timestamp = this._pts;\r\n                                packet.avtype = AVType.Video;\r\n                                // packet.nals = SplitBufferToNals(vframe);\r\n\r\n                                this.emit('videodata', packet);\r\n\r\n                            } else {\r\n\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                } else if (this._tagtype === FLV_MEDIA_TYPE.Audio) {\r\n\r\n                    let soundformat = (remain[0]>>4)&0x0F;\r\n                    let soundrate = (remain[0]>>2)&0x02;\r\n                    let soundsize = (remain[0]>>1)&0x01;\r\n                    let soundtype = (remain[0])&0x0F;\r\n\r\n                    if (soundformat === SoundFormat.AAC) {\r\n\r\n                        let aacpackettype = remain[1]; \r\n\r\n                        if (aacpackettype === AACPackettype.AACSequenceHeader) {\r\n\r\n                            let aacinfo = readAACSpecificConfig(remain.slice(0, this._needlen));\r\n\r\n                            \r\n                            this._audioinfo.atype = AudioType.AAC;\r\n                            this._audioinfo.profile = aacinfo.object_type;\r\n                            this._audioinfo.sample = aacinfo.sample_rate;\r\n                            this._audioinfo.channels = aacinfo.chan_config;\r\n                            this._audioinfo.depth = soundsize ? 16 : 8;\r\n                            this._audioinfo.extradata = remain.slice(2, this._needlen);\r\n\r\n                            this.emit('audioinfo', this._audioinfo);\r\n\r\n                        } else {\r\n\r\n                            let aacraw = remain.slice(2, this._needlen);\r\n\r\n                            let packet = new AVPacket();\r\n                            packet.payload = aacraw;\r\n                            packet.iskeyframe = false;\r\n                            packet.timestamp = this._dts;\r\n                            packet.avtype = AVType.Audio;\r\n    \r\n                            this.emit('audiodata', packet);\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (!this._pcminfosend) {\r\n\r\n                            this._audioinfo.atype = soundformat === SoundFormat.G711A ? AudioType.PCMA : AudioType.PCMU;\r\n                            this._audioinfo.profile = 0;\r\n                            this._audioinfo.sample = 8000;\r\n                            this._audioinfo.channels = 1;\r\n                            this._audioinfo.depth = 16;\r\n                            this._audioinfo.extradata = new Uint8Array(0);\r\n\r\n                            this.emit('audioinfo', this._audioinfo);\r\n\r\n                            this._pcminfosend = true;\r\n                        }\r\n\r\n                        let audioraw = remain.slice(1, this._needlen);\r\n\r\n                        \r\n                        let packet = new AVPacket();\r\n                        packet.payload = audioraw;\r\n                        packet.iskeyframe = false;\r\n                        packet.timestamp = this._dts;\r\n                        packet.avtype = AVType.Audio;\r\n\r\n                        this.emit('audiodata', packet);\r\n                    }\r\n\r\n                } else if (this._tagtype === FLV_MEDIA_TYPE.Script) {\r\n\r\n\r\n                } else {\r\n\r\n\r\n                }\r\n\r\n                remain = remain.slice(this._needlen);\r\n\r\n                this._needlen = 15;\r\n                this._state = FLV_Parse_State.TagCommerHeader;\r\n            }\r\n\r\n        }\r\n\r\n        this._buffer = remain;\r\n\r\n\r\n    }\r\n\r\n    destroy() {\r\n\r\n        this.off();\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction convertAVCCtoAnnexB(buffer) {\r\n\r\n    let offset = 0;\r\n\r\n    const tmp = new ArrayBuffer(4);\r\n    const dv = new DataView(tmp);\r\n\r\n    while(offset < buffer.length) {\r\n\r\n        dv.setUint8(0, buffer[offset+3]);\r\n        dv.setUint8(1, buffer[offset+2]);\r\n        dv.setUint8(2, buffer[offset+1]);\r\n        dv.setUint8(3, buffer[offset]);\r\n        \r\n        let nallen = dv.getUint32(0, true);\r\n        \r\n        buffer[offset] = 0;\r\n        buffer[offset+1] = 0;\r\n        buffer[offset+2] = 0;\r\n        buffer[offset+3] = 1;\r\n\r\n        offset += 4;\r\n        let naltype = buffer[offset]&0x1F;\r\n\r\n       // console.log(`nal len ${nallen} type:${naltype}`)\r\n        offset += nallen;\r\n    }\r\n\r\n    if (offset != buffer.length) {\r\n\r\n        console.error(`parse nal error, offset:${offset} buflen:${buffer.length}`)\r\n    } else {\r\n      //  console.log(`parse nal suc, offset:${offset} buflen:${buffer.length}`)\r\n\r\n    }\r\n\r\n\r\n    return buffer;\r\n}\r\n\r\n\r\n\r\nfunction SplitBufferToNals(buffer) {\r\n\r\n    let nals = [];\r\n    let offset = 0;\r\n\r\n    \r\n    const tmp = new ArrayBuffer(4);\r\n    const dv = new DataView(tmp);\r\n\r\n    while(offset < buffer.length) {\r\n\r\n        dv.setUint8(0, buffer[offset+3]);\r\n        dv.setUint8(1, buffer[offset+2]);\r\n        dv.setUint8(2, buffer[offset+1]);\r\n        dv.setUint8(3, buffer[offset]);\r\n        \r\n        let nallen = dv.getUint32(0, true);\r\n        \r\n        //buf.writeUInt32BE(1, offset);\r\n\r\n        nals.push(buffer.slice(offset, offset + nallen + 4));\r\n        \r\n        offset += 4;\r\n        let naltype = buffer[offset]&0x1F;\r\n\r\n       // console.log(`nal len ${nallen} type:${naltype}`)\r\n        offset += nallen;\r\n    }\r\n\r\n    if (offset != buffer.length) {\r\n\r\n        console.error(`parse nal error, offset:${offset} buflen:${buffer.length}`)\r\n    } else {\r\n      //  console.log(`parse nal suc, offset:${offset} buflen:${buffer.length}`)\r\n\r\n    }\r\n\r\n    return nals;\r\n\r\n}\r\n\r\n\r\nfunction ParseSPSAndPPS(videData) {\r\n\r\n    let avcSequenceHeader = new Uint8Array(videData.length - 5);\r\n    avcSequenceHeader.set(videData.slice(5));\r\n\r\n        \r\n    const tmp = new ArrayBuffer(2);\r\n    const dv = new DataView(tmp);\r\n  \r\n    let offset = 5;\r\n    let spsnum = avcSequenceHeader[offset]&0x1F;\r\n    offset += 1;\r\n\r\n    dv.setInt8(0,avcSequenceHeader[offset+1]);\r\n    dv.setInt8(1,avcSequenceHeader[offset]);\r\n\r\n    let spslen = dv.getUint16(0, true);\r\n    offset += 2;\r\n    let sps = avcSequenceHeader.slice(offset, offset + spslen);\r\n    offset += spslen;\r\n\r\n    let ppsnum = avcSequenceHeader[offset];\r\n    offset += 1;\r\n\r\n    dv.setInt8(0,avcSequenceHeader[offset+1]);\r\n    dv.setInt8(1,avcSequenceHeader[offset]);\r\n    let ppslen =  dv.getUint16(0, true);\r\n    offset += 2;\r\n    let pps = avcSequenceHeader.slice(offset, offset + ppslen);\r\n\r\n    return {sps, pps}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default FLVDemux;","import EventEmitter from '../utils/events.js';\r\n\r\n\r\n\r\nclass FetchStream extends EventEmitter {\r\n\r\n    _avplayer = undefined;\r\n    _abort = undefined;\r\n\r\n    constructor(avplayer) {\r\n\r\n        super();\r\n\r\n        this._avplayer = avplayer;\r\n        this._abort = new AbortController();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        fetch(this._avplayer._options.url, {signal:this._abort.signal}).then((res) => {\r\n            const reader = res.body.getReader();\r\n            \r\n            let fetchNext = async () => {\r\n\r\n                let {done, value} = await reader.read();\r\n\r\n                if (done) {\r\n\r\n                } else {\r\n\r\n                    this._avplayer._demux.dispatch(value);\r\n\r\n                    fetchNext();\r\n                }\r\n\r\n            }\r\n\r\n            fetchNext();\r\n\r\n\r\n        }).catch((e) => {\r\n\r\n            this.stop();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n        if (this._abort) {\r\n\r\n            this._abort.abort();\r\n            this._abort = undefined;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    destroy() {\r\n        this.stop();\r\n        this.off();\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default FetchStream;","import {WORKER_SEND_TYPE, WORKER_EVENT_TYPE} from '../constant'\r\nimport EventEmitter from '../utils/events.js';\r\n\r\nclass MediaCenter extends EventEmitter  {\r\n\r\n\r\n    _mediacenterWorker = undefined;\r\n    _player;\r\n\r\n    constructor (player) {\r\n\r\n        super()\r\n\r\n        this._player = player;\r\n\r\n        this._player._logger.info('mediacenter', `start worker thread ${player._options.decoder}`);\r\n        this._mediacenterWorker = new Worker(player._options.decoder);\r\n\r\n        this._mediacenterWorker.onmessageerror = (event) => {\r\n\r\n\r\n            this._player._logger.info('mediacenter', `start worker thread err ${event}`);\r\n        };\r\n\r\n        this._mediacenterWorker.onmessage = (event) => {\r\n\r\n            const msg = event.data;\r\n            switch (msg.cmd) {\r\n\r\n                case WORKER_EVENT_TYPE.created: {\r\n\r\n                    this._mediacenterWorker.postMessage({\r\n                                                cmd: WORKER_SEND_TYPE.init,\r\n                                                options:JSON.stringify(this._player._options)});\r\n                    break;\r\n\r\n                }\r\n\r\n                case WORKER_EVENT_TYPE.inited: {\r\n    \r\n                    this.emit('inited');\r\n                    break;\r\n\r\n                }\r\n\r\n                case WORKER_EVENT_TYPE.videoInfo: {\r\n\r\n                    this.emit('videoinfo', msg.vtype, msg.width, msg.height);\r\n                    break;\r\n                }\r\n\r\n                    \r\n                case WORKER_EVENT_TYPE.yuvData: {\r\n\r\n                    let yuvpacket = {\r\n                        width:msg.width,\r\n                        height:msg.height,\r\n                        data:msg.data,\r\n                        timestamp:msg.timestamp\r\n                    };\r\n                \r\n                    this.emit('yuvdata', yuvpacket);\r\n                    break;\r\n                }\r\n\r\n                case WORKER_EVENT_TYPE.audioInfo: {\r\n\r\n                    this.emit('audioinfo', msg.atype, msg.sampleRate, msg.channels, msg.samplesPerPacket);\r\n                    break;\r\n                }\r\n\r\n     \r\n                case WORKER_EVENT_TYPE.pcmData: {\r\n\r\n                    let pcmpacket = {\r\n                        datas:msg.datas,\r\n                        timestamp:msg.timestamp\r\n                    };\r\n                \r\n                    this.emit('pcmdata', pcmpacket);\r\n                    break;\r\n\r\n                }\r\n   \r\n                default: {\r\n\r\n                    break;\r\n                }\r\n                   \r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    \r\n    destroy() {\r\n\r\n        this._mediacenterWorker.terminate();\r\n            \r\n    }\r\n\r\n    setVideoCodec(vtype, extradata) {\r\n\r\n\r\n        this._mediacenterWorker.postMessage({\r\n                                            cmd: WORKER_SEND_TYPE.setVideoCodec,\r\n                                            vtype,\r\n                                            extradata}, [extradata.buffer]);\r\n    }\r\n\r\n    decodeVideo(videodata, timestamp, keyframe) {\r\n\r\n        this._mediacenterWorker.postMessage({\r\n                                                cmd: WORKER_SEND_TYPE.decodeVideo,\r\n                                                videodata,\r\n                                                timestamp,\r\n                                                keyframe\r\n                                             }, [videodata.buffer]);\r\n    }\r\n\r\n\r\n    setAudioCodec(atype, extradata) {\r\n\r\n        this._mediacenterWorker.postMessage({\r\n            cmd: WORKER_SEND_TYPE.setAudioCodec,\r\n            atype,\r\n            extradata}, [extradata.buffer]);\r\n\r\n    }\r\n\r\n    decodeAudio(audiodata, timestamp) {\r\n\r\n   \r\n        this._mediacenterWorker.postMessage({\r\n            cmd: WORKER_SEND_TYPE.decodeAudio,\r\n            audiodata,\r\n            timestamp,\r\n         }, [audiodata.buffer]);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default  MediaCenter;\r\n","\r\nfunction uint2int (num) {\r\n    if (num > 0xff / 2) {\r\n      var a = ~0xff;\r\n      num = num | a;\r\n    }\r\n    return num;\r\n  }\r\n\r\nfunction clamp(num, a, b) {\r\n    return Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\r\n}\r\n\r\n\r\nexport { uint2int, clamp };","import EventEmitter from \"../utils/events\";\r\nimport { clamp } from \"../utils\";\r\n\r\nclass AudioPlayer extends EventEmitter {\r\n\r\n    _player = undefined;\r\n    _audioContext = undefined;\r\n    _audioBuffer = undefined;\r\n    _gainNode = undefined;\r\n    _scriptNode = undefined;\r\n    _playing = false;\r\n\r\n    _atype = 0;\r\n    _samplerate = 0;\r\n    _channels = 0;\r\n    _samplesPerPacket = 0;\r\n\r\n    _init = false;\r\n\r\n    constructor(player) {\r\n\r\n        super();\r\n\r\n        this._audioBuffer = [];\r\n        this._player = player;\r\n\r\n        this._playing = false;\r\n        this._init = false;\r\n\r\n        this._player._logger.info('AudioPlayer', 'created');\r\n    }\r\n\r\n    setAudioInfo(atype, samplerate, channels, samplesPerPacket) {\r\n\r\n        this._atype = atype;\r\n        this._samplerate = samplerate;\r\n        this._channels = channels;\r\n        this._samplesPerPacket = samplesPerPacket\r\n\r\n        this._audioContext = new (window.AudioContext || window.webkitAudioContext)({sampleRate:samplerate});\r\n\r\n        this._gainNode = this._audioContext.createGain();\r\n\r\n        this.audioEnabled(true);\r\n        // default setting 0\r\n        this._gainNode.gain.value = 0;\r\n        \r\n        let scriptNode = this._audioContext.createScriptProcessor(samplesPerPacket, 0, channels);\r\n\r\n        scriptNode.onaudioprocess = (audioProcessingEvent) => {\r\n\r\n            \r\n\r\n            let outputBuffer = audioProcessingEvent.outputBuffer;\r\n\r\n          //  this._player._logger.info('AudioPlayer', `onaudioprocess callback ${outputBuffer.sampleRate}`);\r\n\r\n            if (this._audioBuffer.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let bufferItem = this._audioBuffer.shift();\r\n\r\n            for (let i = 0; i < this._channels; i++) {\r\n                let b = bufferItem.buffer[i];\r\n                let nowBuffering = outputBuffer.getChannelData(i);\r\n              //  this._player._logger.info('AudioPlayer', `onaudioprocess callback outputBuffer[${i}] length ${nowBuffering.length}`);\r\n                for (let i = 0; i < this._samplesPerPacket; i++) {\r\n                    nowBuffering[i] = b[i] || 0;\r\n                }\r\n            }\r\n      \r\n        }\r\n\r\n        scriptNode.connect(this._gainNode);\r\n        this._scriptNode = scriptNode;\r\n        this._gainNode.connect(this._audioContext.destination);\r\n\r\n        this._init = true;\r\n    }\r\n\r\n    //\r\n    isPlaying() {\r\n        return this._playing;\r\n    }\r\n\r\n     isMute() {\r\n        return this._gainNode.gain.value === 0 || this.isStateSuspended();\r\n    }\r\n\r\n    volume() {\r\n        return this._gainNode.gain.value;\r\n    }\r\n\r\n\r\n\r\n    mute() {\r\n\r\n        if (!this._init) {\r\n\r\n            return;\r\n        }\r\n\r\n        this.setVolume(0);\r\n        this.audioEnabled(false);\r\n        this.clear();\r\n    }\r\n\r\n    unMute() {\r\n\r\n        if (!this._init) {\r\n\r\n            return;\r\n        }\r\n\r\n        this.setVolume(1);\r\n        this.audioEnabled(true);\r\n    \r\n    }\r\n\r\n    setVolume(volume) {\r\n        volume = parseFloat(volume).toFixed(2);\r\n        if (isNaN(volume)) {\r\n            return;\r\n        }\r\n        this.audioEnabled(true);\r\n        volume = clamp(volume, 0, 1);\r\n        this._gainNode.gain.value = volume;\r\n        this._gainNode.gain.setValueAtTime(volume, this._audioContext.currentTime);\r\n    }\r\n\r\n    closeAudio() {\r\n        if (this.init) {\r\n            this.scriptNode && this.scriptNode.disconnect(this._gainNode);\r\n            this._gainNode && this._gainNode.disconnect(this._audioContext.destination);\r\n        }\r\n        this.clear();\r\n    }\r\n\r\n    // 是否播放。。。\r\n    audioEnabled(flag) {\r\n\r\n        this._player._logger.info('audioplayer', `audioEnabled flag ${flag} state ${this._audioContext.state}`);\r\n\r\n        if (flag) {\r\n            if (this._audioContext.state === 'suspended') {\r\n                // resume\r\n                this._audioContext.resume();\r\n            }\r\n        } else {\r\n            if (this._audioContext.state === 'running') {\r\n                // suspend\r\n                this._audioContext.suspend();\r\n            }\r\n        }\r\n    }\r\n\r\n    isStateRunning() {\r\n        return this._audioContext.state === 'running';\r\n    }\r\n\r\n    isStateSuspended() {\r\n        return this._audioContext.state === 'suspended';\r\n    }\r\n\r\n    clear() {\r\n        this._audioBuffer = [];\r\n    }\r\n\r\n    pushAudio(buffer, ts) {\r\n\r\n        if(this.isStateSuspended()) {\r\n\r\n            return;\r\n        }\r\n\r\n        this._audioBuffer.push({\r\n            buffer,\r\n            ts\r\n        });\r\n\r\n        // this.player.debug.log('AudioContext', `bufferList is ${this.bufferList.length}`)\r\n    }\r\n\r\n    pause() {\r\n\r\n        this._playing = false;\r\n        this.clear();\r\n    }\r\n\r\n    resume() {\r\n        this._playing = true;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        this.closeAudio();\r\n        this._audioContext.close();\r\n        this._audioContext = null;\r\n        this._gainNode = null;\r\n        this.init = false;\r\n        if (this._scriptNode) {\r\n            this._scriptNode.onaudioprocess = undefined;\r\n            this._scriptNode = null;\r\n        }\r\n        this.off();\r\n        this._player._logger.info('AudioPlayer', 'destroy');\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AudioPlayer;","import CanvasRender from './render/canvasrender.js';\r\nimport Logger from './utils/logger.js';\r\nimport FLVDemux from './demux/flvdemux.js';\r\nimport FetchStream from './stream/fetchstream.js';\r\nimport MediaCenter from './mediacenter/index.js';\r\nimport { PixelType } from './constant/index.js';\r\nimport AudioPlayer from './audio/audioplayer.js';\r\n\r\nconst DEFAULT_PLAYER_OPTIONS = {\r\n\r\n    url:'',                 //播放地址\r\n    container:'',           //外部容器，用于放置渲染画面\r\n    playmode:'live',        //live 或者 playback\r\n    delay:100,              //缓冲时长\r\n    decoder:'decoder.js',    //work线程的js文件\r\n\r\n}\r\n\r\nclass AVPlayer {\r\n\r\n    _options = undefined;\r\n\r\n    _render = undefined;\r\n    _logger = undefined;\r\n    _demux = undefined;\r\n    _stream = undefined;\r\n    _mediacenter = undefined;\r\n    _audioplayer = undefined;\r\n\r\n\r\n    //统计\r\n    _vframerate = 0;\r\n    _vbitrate = 0;\r\n    _aframerate = 0;\r\n    _abitrate = 0;\r\n\r\n    _yuvframerate = 0;\r\n    _yuvbitrate = 0;\r\n    _pcmframerate = 0;\r\n    _pcmbitrate = 0;\r\n\r\n    _statsec = 2;\r\n    _stattimer = undefined;\r\n\r\n\r\n    constructor(options) {\r\n\r\n        this._logger = new Logger();\r\n        this._logger.setLogEnable(true);\r\n\r\n        this._options = Object.assign({}, DEFAULT_PLAYER_OPTIONS, options);\r\n        this._container = options.container;\r\n\r\n        this._logger.info('player', `now play ${this._options.url}`);\r\n\r\n\r\n        this._stream = new FetchStream(this); //get strem from remote\r\n        this._demux = new FLVDemux(this);     // demux stream to h264/h265 aac/pcmu/pcma\r\n        this._mediacenter = new MediaCenter(this); //jitterbuffer & decoder h264/h265 -> yuv aac/pcmu/pcma -> fltp\r\n        this._render = new CanvasRender(this);  // render yuv\r\n        this._audioplayer = new AudioPlayer(this); // play fltp\r\n\r\n        this.registerEvents();\r\n        this.startStatisc();\r\n    }\r\n    \r\n    startStatisc() {\r\n\r\n        this._stattimer = setInterval(() => {\r\n            \r\n            this._logger.info('STAT', `------ STAT ---------\r\n            video framerate:${this._vframerate/this._statsec} bitrate:${this._vbitrate*8/this._statsec}\r\n            audio framerate:${this._aframerate/this._statsec} bitrate:${this._abitrate*8/this._statsec}\r\n            yuv   framerate:${this._yuvframerate/this._statsec} bitrate:${this._yuvbitrate*8/this._statsec}\r\n            pcm   framerate:${this._pcmframerate/this._statsec} bitrate:${this._pcmbitrate*8/this._statsec}\r\n            `);\r\n\r\n\r\n            this._vframerate = 0;\r\n            this._vbitrate = 0;\r\n            this._aframerate = 0;\r\n            this._abitrate = 0;\r\n            this._yuvframerate = 0;\r\n            this._yuvbitrate = 0;\r\n            this._pcmframerate = 0;\r\n            this._pcmbitrate = 0;\r\n\r\n\r\n        }, this._statsec*1000);\r\n\r\n    }\r\n\r\n    stopStatic() {\r\n\r\n        if (this._stattimer) {\r\n\r\n            clearInterval(this._stattimer);\r\n            this._stattimer = undefined;\r\n        }\r\n\r\n    }\r\n\r\n    registerEvents() {\r\n\r\n        this._demux.on('videoinfo', (videoinfo) => {\r\n\r\n            this._logger.info('player', `videoinfo vtype:${videoinfo.vtype} width:${videoinfo.width} hight:${videoinfo.height}`);\r\n\r\n            this._mediacenter.setVideoCodec(videoinfo.vtype, videoinfo.extradata);\r\n\r\n        })\r\n\r\n        this._demux.on('audioinfo', (audioinfo) => {\r\n\r\n            this._logger.info('player', `audioinfo atype:${audioinfo.atype} sample:${audioinfo.sample} channels:${audioinfo.channels} depth:${audioinfo.depth} aacprofile:${audioinfo.profile}`);\r\n\r\n            this._mediacenter.setAudioCodec(audioinfo.atype, audioinfo.extradata);\r\n        })\r\n\r\n        this._demux.on('videodata', (packet) => {\r\n\r\n           //  this._logger.info('player', `recv VideoData ${packet.payload.length} keyframe:${packet.iskeyframe} pts:${packet.timestamp}`);\r\n            // for (let nal of packet.nals) {\r\n\r\n            //     let naltype = nal[4]&0x1F;\r\n            //     this._logger.info('player', `Parse Nal: ${naltype}`)\r\n\r\n            // }\r\n\r\n            this._vframerate++;\r\n            this._vbitrate += packet.payload.length;\r\n\r\n            this._mediacenter.decodeVideo(packet.payload, packet.timestamp, packet.iskeyframe)\r\n\r\n        })\r\n\r\n        this._demux.on('audiodata', (packet) => {\r\n\r\n            this._aframerate++;\r\n            this._abitrate += packet.payload.length;\r\n          //  this._logger.info('player', `recv AudioData ${packet.payload.length} pts:${packet.timestamp}`);\r\n\r\n          this._mediacenter.decodeAudio(packet.payload, packet.timestamp);\r\n        })\r\n\r\n        this._mediacenter.on('inited', () => {\r\n\r\n            this._logger.info('player', `mediacenter init success`);\r\n\r\n            //start stream\r\n            this._stream.start(); \r\n        })\r\n\r\n        this._mediacenter.on('videoinfo', (vtype, width, height) => {\r\n\r\n            this._logger.info('player', `videoinfo vtype ${vtype} width ${width} height ${height}`);\r\n        })\r\n\r\n        this._mediacenter.on('yuvdata', (yuvpacket) => {\r\n\r\n\r\n            this._yuvframerate++;\r\n            this._yuvbitrate += yuvpacket.data.length;\r\n       //     this._logger.info('player', `decoder yuvdata ${yuvpacket.data.length} ts ${yuvpacket.timestamp} width:${yuvpacket.width} height:${yuvpacket.height}`);\r\n\r\n       //     this._logger.info('player', `main yuv[0-5] ${ yuvpacket.data[0]} ${ yuvpacket.data[1]} ${ yuvpacket.data[2]} ${ yuvpacket.data[3]} ${ yuvpacket.data[4]} ${ yuvpacket.data[5]}`);\r\n            this._render.updateTexture(PixelType.YUV, yuvpacket.data, yuvpacket.width, yuvpacket.height);\r\n        })\r\n\r\n        this._mediacenter.on('audioinfo', (atype, sampleRate, channels, samplesPerPacket) => {\r\n\r\n            this._logger.info('player', `audioninfo atype ${atype} sampleRate ${sampleRate} channels ${channels}  samplesPerPacket ${samplesPerPacket}`);\r\n            \r\n            this._audioplayer.setAudioInfo(atype, sampleRate, channels,samplesPerPacket);\r\n            \r\n        })\r\n\r\n        this._mediacenter.on('pcmdata', (pcmpacket) => {\r\n\r\n\r\n            this._pcmframerate++;\r\n\r\n            for(let data of pcmpacket.datas) {\r\n\r\n                this._pcmbitrate += data.length;\r\n            }\r\n\r\n            this._audioplayer.pushAudio(pcmpacket.datas, pcmpacket.timestamp);\r\n            \r\n         //  this._logger.info('player', `decoder pcmarray ${pcmpacket.datas.length} pcm[0] ${pcmpacket.datas[0].length} ts ${pcmpacket.timestamp}`);\r\n\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    updateTexture(rgbabuf, width, height) {\r\n\r\n        this._render.updateTexture(PixelType.RGBA, rgbabuf, width, height);\r\n    }\r\n\r\n    unMute() {\r\n\r\n        this._audioplayer.unMute();\r\n    }\r\n\r\n\r\n}\r\n\r\nwindow.AVPlayer = AVPlayer;\r\n\r\nexport default AVPlayer;"],"names":["BaseRender","constructor","create","glMatrix.ARRAY_TYPE","glMatrix.EPSILON","AVType","Video","Audio","VideoType","H264","H265","AudioType","PCM","PCMA","PCMU","AAC","PixelType","YUV","RGBA","WORKER_SEND_TYPE","init","setVideoCodec","decodeVideo","setAudioCodec","decodeAudio","close","WORKER_EVENT_TYPE","created","inited","videoInfo","yuvData","audioInfo","pcmData","vsSource","fsSource","RectMaskRender","_gl","undefined","_width","_height","_pixeltype","_textureWidth","_textureHeight","_programInfo","_buffers","gl","width","height","pixelStorei","UNPACK_ALIGNMENT","shaderProgram","initShaderProgram","program","attribLocations","vertexPosition","getAttribLocation","texturePosition","uniformLocations","projectionMatrix","getUniformLocation","modelMatrix","viewMatrix","rgbatexture","ytexture","utexture","vtexture","isyuv","initBuffers","_rgbatexture","createTexture","_ytexture","_utexture","_vtexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","updateTexture","pixeltype","pixelbuf","textunit","activeTexture","TEXTURE0","texImage2D","UNSIGNED_BYTE","y","slice","u","v","LUMINANCE","TEXTURE1","TEXTURE2","drawScene","viewport","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","adjustHeight","adjustWidth","zNear","zFar","mat4","vec3","numComponents","type","FLOAT","normalize","stride","offset","bindBuffer","ARRAY_BUFFER","position","vertexAttribPointer","enableVertexAttribArray","texposition","rgbatextunit","ytextunit","utextunit","vtextunit","ELEMENT_ARRAY_BUFFER","indices","useProgram","uniformMatrix4fv","uniform1i","vertexCount","UNSIGNED_SHORT","drawElements","TRIANGLES","getRGBA","pixels","Uint8Array","readPixels","positionBuffer","createBuffer","positions","bufferData","Float32Array","STATIC_DRAW","facePos","texturePos","concat","texpositionBuffer","indexBuffer","Uint16Array","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","log","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createContextGL","$canvas","validContextNames","nameIndex","length","contextName","contextOptions","preserveDrawingBuffer","getContext","e","getParameter","WebGLRender","_render","canvas","CanvasRender","_avplayer","_webglrender","avplayer","canvasElement","document","createElement","style","top","left","_videoElement","_container","appendChild","Logger","_logEnable","setLogEnable","logEnable","info","module","args","warn","error","EventEmitter","on","name","fn","ctx","push","once","self","listener","off","apply","_","emit","evtArr","data","i","callback","Object","keys","forEach","key","evts","liveEvents","len","Bitop","buffer","buflen","bufpos","bufoff","iserro","read","n","d","look","p","o","read_golomb","AAC_SAMPLE_RATE","AAC_CHANNELS","getObjectType","bitop","audioObjectType","getSampleRate","sampling_index","readAACSpecificConfig","aacSequenceHeader","object_type","sample_rate","chan_config","channels","sbr","ps","ext_object_type","readH264SpecificConfig","avcSequenceHeader","profile_idc","crop_left","crop_right","crop_top","crop_bottom","frame_mbs_only","cf_idc","num_ref_frames","profile","compat","level","nalu","nb_sps","avc_ref_frames","HEVCParsePtl","hevc","max_sub_layers_minus1","general_ptl","profile_space","tier_flag","profile_compatibility_flags","general_progressive_source_flag","general_interlaced_source_flag","general_non_packed_constraint_flag","general_frame_only_constraint_flag","level_idc","sub_layer_profile_present_flag","sub_layer_level_present_flag","sub_layer_profile_space","sub_layer_tier_flag","sub_layer_profile_idc","sub_layer_profile_compatibility_flag","sub_layer_progressive_source_flag","sub_layer_interlaced_source_flag","sub_layer_non_packed_constraint_flag","sub_layer_frame_only_constraint_flag","sub_layer_level_idc","HEVCParseSPS","SPS","psps","NumBytesInNALunit","rbsp_array","rbsp","rbspBitop","sps_video_parameter_set_id","sps_max_sub_layers_minus1","sps_temporal_id_nesting_flag","profile_tier_level","sps_seq_parameter_set_id","chroma_format_idc","separate_colour_plane_flag","pic_width_in_luma_samples","pic_height_in_luma_samples","conformance_window_flag","vert_mult","horiz_mult","conf_win_left_offset","conf_win_right_offset","conf_win_top_offset","conf_win_bottom_offset","readHEVCSpecificConfig","hevcSequenceHeader","configurationVersion","general_profile_space","general_tier_flag","general_profile_idc","general_profile_compatibility_flags","general_constraint_indicator_flags","general_level_idc","min_spatial_segmentation_idc","parallelismType","chromaFormat","bitDepthLumaMinus8","bitDepthChromaMinus8","avgFrameRate","constantFrameRate","numTemporalLayers","temporalIdNested","lengthSizeMinusOne","numOfArrays","brak","nalutype","j","k","sps","set","readAVCSpecificConfig","codec_id","AVPacket","payload","avtype","timestamp","nals","iskeyframe","VideoInfo","vtype","extradata","AudioInfo","atype","sample","depth","FLV_MEDIA_TYPE","Script","CodecID","AVC","HEVC","FrameType","KeyFrame","InterFrame","AVCPacketType","AVCSequenceHeader","AVCNalu","SoundFormat","G711A","G711U","AACPackettype","AACSequenceHeader","AACRaw","FLV_Parse_State","Init","TagCommerHeader","TagPayload","FLVDemux","_buffer","_needlen","_state","_tagtype","_dts","_pts","_videoinfo","_audioinfo","dispatch","remain","newbuffer","tmp","ArrayBuffer","dv","DataView","setUint8","payloadlen","getUint32","getInt32","frametype","codecid","avcpackettype","compositiontime","obj","ParseSPSAndPPS","_sps","_pps","pps","_logger","vframe","packet","SplitBufferToNals","convertAVCCtoAnnexB","soundformat","soundsize","aacpackettype","aacinfo","aacraw","_pcminfosend","audioraw","destroy","nallen","videData","setInt8","spslen","getUint16","ppslen","FetchStream","_abort","AbortController","start","fetch","_options","url","signal","then","res","reader","body","getReader","fetchNext","done","value","_demux","catch","stop","abort","MediaCenter","_mediacenterWorker","_player","player","decoder","Worker","onmessageerror","event","onmessage","msg","cmd","postMessage","options","JSON","stringify","yuvpacket","sampleRate","samplesPerPacket","pcmpacket","datas","terminate","videodata","keyframe","audiodata","clamp","num","a","b","Math","max","min","AudioPlayer","_audioContext","_audioBuffer","_gainNode","_scriptNode","_playing","_atype","_samplerate","_channels","_samplesPerPacket","_init","setAudioInfo","samplerate","window","AudioContext","webkitAudioContext","createGain","audioEnabled","gain","scriptNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","bufferItem","shift","nowBuffering","getChannelData","connect","destination","isPlaying","isMute","isStateSuspended","volume","mute","setVolume","unMute","parseFloat","toFixed","isNaN","setValueAtTime","currentTime","closeAudio","disconnect","flag","state","resume","suspend","isStateRunning","pushAudio","ts","pause","DEFAULT_PLAYER_OPTIONS","container","playmode","delay","AVPlayer","_stream","_mediacenter","_audioplayer","_vframerate","_vbitrate","_aframerate","_abitrate","_yuvframerate","_yuvbitrate","_pcmframerate","_pcmbitrate","_statsec","_stattimer","assign","registerEvents","startStatisc","setInterval","stopStatic","clearInterval","videoinfo","audioinfo","rgbabuf"],"mappings":"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"}