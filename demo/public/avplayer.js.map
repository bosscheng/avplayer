{"version":3,"file":"avplayer.js","sources":["../../src/render/baserender.js","../../node_modules/gl-matrix/esm/common.js","../../node_modules/gl-matrix/esm/mat4.js","../../node_modules/gl-matrix/esm/vec3.js","../../src/render/cuberender.js","../../src/render/webglrender.js","../../src/render/canvasrender.js","../../src/utils/logger.js","../../src/utils/events.js","../../src/utils/bitop.js","../../src/utils/specific.js","../../src/utils/av.js","../../src/constant/index.js","../../src/demux/flvdemux.js","../../src/stream/fetchstream.js","../../src/avplayer.js"],"sourcesContent":["\r\n\r\nclass BaseRender {\r\n\r\n\r\n    constructor() {\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default BaseRender;","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","\r\n\r\nimport BaseRender from \"./baserender.js\";\r\nimport {mat4,vec3}  from 'gl-matrix'\r\n\r\n\r\nconst vsSource = `\r\nattribute vec4 aVertexPosition;\r\nattribute vec2 aTexturePosition;\r\nuniform mat4 uModelMatrix;\r\nuniform mat4 uViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nvarying lowp vec2 vTexturePosition;\r\nvoid main(void) {\r\n  gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * aVertexPosition;\r\n  vTexturePosition = aTexturePosition;\r\n}\r\n`;\r\n\r\n// Fragment shader program\r\n\r\nconst fsSource = `\r\nvarying lowp vec2 vTexturePosition;\r\nuniform sampler2D uTexture; \r\nvoid main(void) {\r\n  gl_FragColor =  texture2D(uTexture, vTexturePosition);\r\n //gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nvar cubeRotation = 0.0;\r\n\r\nclass CubeRender extends BaseRender {\r\n\r\n    _gl = undefined;\r\n    _width = 0;\r\n    _height = 0;\r\n\r\n    constructor(gl, width, height) {\r\n\r\n        super();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this._gl = gl;\r\n        this._gl.pixelStorei(this._gl.UNPACK_ALIGNMENT, 1);\r\n\r\n      const shaderProgram = initShaderProgram(this._gl, vsSource, fsSource);\r\n    \r\n      const programInfo = {\r\n        program: shaderProgram,\r\n        attribLocations: {\r\n          vertexPosition: this._gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\r\n          texturePosition: this._gl.getAttribLocation(shaderProgram, 'aTexturePosition'),\r\n        },\r\n        uniformLocations: {\r\n          projectionMatrix: this._gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\r\n          modelMatrix: this._gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\r\n          viewMatrix: this._gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\r\n          texture: this._gl.getUniformLocation(shaderProgram, 'uTexture'),\r\n        }\r\n      };\r\n    \r\n      // Here's where we call the routine that builds all the\r\n      // objects we'll be drawing.\r\n      const buffers = initBuffers(this._gl);\r\n\r\n      let texture = this._gl.createTexture();\r\n      this._gl.bindTexture(this._gl.TEXTURE_2D, texture);\r\n  \r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\r\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\r\n\r\n      this._texture = texture;\r\n\r\n      let deltaTime = -0.015;\r\n\r\n      setInterval(() => {\r\n\r\n        drawScene(this._gl, programInfo, buffers, deltaTime, width, height, this._texture);\r\n          \r\n      }, 33);\r\n\r\n\r\n    }\r\n\r\n\r\n    updateTexture(rgbabuf, width, height) {\r\n\r\n        let gl = this._gl;\r\n\r\n        let textunit = 3;\r\n        gl.activeTexture(gl.TEXTURE0 + textunit);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D,\r\n            0,                // mip level\r\n            gl.RGBA,          // internal format\r\n            width,                // width\r\n            height,                // height\r\n            0,                // border\r\n            gl.RGBA,          // format\r\n            gl.UNSIGNED_BYTE, // type\r\n            rgbabuf);\r\n\r\n    }\r\n\r\n\r\n    getRGBA() {\r\n\r\n        var pixels = new Uint8Array(this._width * this._height * 4)\r\n    \r\n        this._gl.readPixels(0, 0, this._width, this._height, this._gl.RGBA, this._gl.UNSIGNED_BYTE, pixels)\r\n\r\n        return pixels;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction initBuffers(gl) {\r\n\r\n  // Create a buffer for the cube's vertex positions.\r\n  const positionBuffer = gl.createBuffer();\r\n\r\n  // Select the positionBuffer as the one to apply buffer\r\n  // operations to from here out.\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n  // Now create an array of positions for the cube.\r\n\r\n  const positions = [\r\n    // Front face\r\n    -1.0, -1.0,  1.0,\r\n     1.0, -1.0,  1.0,\r\n     1.0,  1.0,  1.0,\r\n    -1.0,  1.0,  1.0,\r\n\r\n    // Back face\r\n    1.0, -1.0, -1.0,\r\n    -1.0, -1.0, -1.0,\r\n    -1.0,  1.0, -1.0,\r\n     1.0,  1.0, -1.0,\r\n\r\n\r\n    // Top face\r\n    -1.0,  1.0, -1.0,\r\n    -1.0,  1.0,  1.0,\r\n     1.0,  1.0,  1.0,\r\n     1.0,  1.0, -1.0,\r\n\r\n    // Bottom face\r\n    -1.0, -1.0, -1.0,\r\n     1.0, -1.0, -1.0,\r\n     1.0, -1.0,  1.0,\r\n    -1.0, -1.0,  1.0,\r\n\r\n    // Right face\r\n    1.0, -1.0,  1.0,\r\n     1.0, -1.0, -1.0,\r\n     1.0,  1.0, -1.0,\r\n     1.0,  1.0,  1.0,\r\n\r\n\r\n    // Left face\r\n    -1.0, -1.0, -1.0,\r\n    -1.0, -1.0,  1.0,\r\n    -1.0,  1.0,  1.0,\r\n    -1.0,  1.0, -1.0,\r\n  ];\r\n\r\n  // Now pass the list of positions into WebGL to build the\r\n  // shape. We do this by creating a Float32Array from the\r\n  // JavaScript array, then use it to fill the current buffer.\r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n  // Now set up the colors for the faces. We'll use solid colors\r\n  // for each face.\r\n\r\n//   const facePos = [\r\n//     [0.0,  0.0],  \r\n//     [1.0,  0.0], \r\n//     [1.0,  1.0],    \r\n//     [0.0,  1.0]  \r\n//   ];\r\n\r\n  const facePos = [\r\n    [1.0,  0.0], \r\n    [0.0,  0.0],  \r\n    [0.0,  1.0],\r\n    [1.0,  1.0]\r\n  ];\r\n  \r\n\r\n  // Convert the array of colors into a table for all the vertices.\r\n\r\n  var texturePos = [];\r\n\r\n  texturePos =  texturePos.concat(...facePos, ...facePos, ...facePos, ...facePos, ...facePos, ...facePos);\r\n\r\n  const texpositionBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, texpositionBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texturePos), gl.STATIC_DRAW);\r\n\r\n  // Build the element array buffer; this specifies the indices\r\n  // into the vertex arrays for each face's vertices.\r\n\r\n  const indexBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n  // This array defines each face as two triangles, using the\r\n  // indices into the vertex array to specify each triangle's\r\n  // position.\r\n\r\n  const indices = [\r\n    0,  1,  2,      0,  2,  3,    // front\r\n    4,  5,  6,      4,  6,  7,    // back\r\n    8,  9,  10,     8,  10, 11,   // top\r\n    12, 13, 14,     12, 14, 15,   // bottom\r\n    16, 17, 18,     16, 18, 19,   // right\r\n    20, 21, 22,     20, 22, 23,   // left\r\n  ];\r\n\r\n  // Now send the element array to GL\r\n\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\r\n      new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n  return {\r\n    position: positionBuffer,\r\n    texposition: texpositionBuffer,\r\n    indices: indexBuffer\r\n  };\r\n}\r\n\r\n\r\nfunction drawScene(gl, programInfo, buffers, deltaTime, width, height, texture) {\r\n\r\n  gl.viewport(0 , 0, width, height);\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);  // Clear to black, fully opaque\r\n  gl.clearDepth(1.0);                 // Clear everything\r\n  gl.enable(gl.DEPTH_TEST);           // Enable depth testing\r\n  gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\r\n\r\n  // Clear the canvas before we start drawing on it.\r\n\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n  // Create a perspective matrix, a special matrix that is\r\n  // used to simulate the distortion of perspective in a camera.\r\n  // Our field of view is 45 degrees, with a width/height\r\n  // ratio that matches the display size of the canvas\r\n  // and we only want to see objects between 0.1 units\r\n  // and 100 units away from the camera.\r\n\r\n  const fieldOfView = 80 * Math.PI / 180;   // in radians\r\n  const aspect = width / height;\r\n  const zNear = 0.1;\r\n  const zFar = 100.0;\r\n  const projectionMatrix = mat4.create();\r\n\r\n  // note: glmatrix.js always has the first argument\r\n  // as the destination to receive the result.\r\n  mat4.perspective(projectionMatrix,\r\n                   fieldOfView,\r\n                   aspect,\r\n                   zNear,\r\n                   zFar);\r\n\r\n//   mat4.ortho(projectionMatrix, -1, 1, -1, 1, zNear, zFar);                 \r\n\r\n  // Set the drawing position to the \"identity\" point, which is\r\n  // the center of the scene.\r\n  const modelMatrix = mat4.create();\r\n\r\n  // Now move the drawing position a bit to where we want to\r\n  // start drawing the square.\r\n\r\n//   mat4.translate(modelMatrix,     // destination matrix\r\n//                 modelMatrix,     // matrix to translate\r\n//                  [-0.0, 0.0, -6.0]);  // amount to translate\r\n//   mat4.rotate(modelMatrix,  // destination matrix\r\n//               modelMatrix,  // matrix to rotate\r\n//               cubeRotation,     // amount to rotate in radians\r\n//               [0, 0, 1]);       // axis to rotate around (Z)\r\n  mat4.rotate(modelMatrix,  // destination matrix\r\n              modelMatrix,  // matrix to rotate\r\n              cubeRotation * .7,// amount to rotate in radians\r\n              [0, 1, 0]);       // axis to rotate around (X)\r\n\r\n\r\n    const viewMatrix = mat4.create();\r\n\r\n    \r\n    mat4.lookAt(viewMatrix, vec3.fromValues(0, 2, 3), vec3.fromValues(0, 0, 0), vec3.fromValues(0, 1, 0));\r\n\r\n  // Tell WebGL how to pull out the positions from the position\r\n  // buffer into the vertexPosition attribute\r\n  {\r\n    const numComponents = 3;\r\n    const type = gl.FLOAT;\r\n    const normalize = false;\r\n    const stride = 0;\r\n    const offset = 0;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\r\n    gl.vertexAttribPointer(\r\n        programInfo.attribLocations.vertexPosition,\r\n        numComponents,\r\n        type,\r\n        normalize,\r\n        stride,\r\n        offset);\r\n    gl.enableVertexAttribArray(\r\n        programInfo.attribLocations.vertexPosition);\r\n  }\r\n\r\n  // Tell WebGL how to pull out the colors from the color buffer\r\n  // into the vertexColor attribute.\r\n  {\r\n    const numComponents = 2;\r\n    const type = gl.FLOAT;\r\n    const normalize = false;\r\n    const stride = 0;\r\n    const offset = 0;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.texposition);\r\n    gl.vertexAttribPointer(\r\n        programInfo.attribLocations.texturePosition,\r\n        numComponents,\r\n        type,\r\n        normalize,\r\n        stride,\r\n        offset);\r\n    gl.enableVertexAttribArray(\r\n        programInfo.attribLocations.texturePosition);\r\n  }\r\n\r\n  let textunit = 2;\r\n  gl.activeTexture(gl.TEXTURE0 + textunit);\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n  // Tell WebGL which indices to use to index the vertices\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\r\n\r\n  // Tell WebGL to use our program when drawing\r\n\r\n  gl.useProgram(programInfo.program);\r\n\r\n  // Set the shader uniforms\r\n\r\n  gl.uniformMatrix4fv(\r\n      programInfo.uniformLocations.projectionMatrix,\r\n      false,\r\n      projectionMatrix);\r\n\r\n  gl.uniformMatrix4fv(\r\n      programInfo.uniformLocations.modelMatrix,\r\n      false,\r\n      modelMatrix);\r\n\r\n      gl.uniformMatrix4fv(\r\n        programInfo.uniformLocations.viewMatrix,\r\n        false,\r\n        viewMatrix);\r\n\r\n  gl.uniform1i(programInfo.uniformLocations.texture, textunit);\r\n\r\n  {\r\n    const vertexCount = 36;\r\n    const type = gl.UNSIGNED_SHORT;\r\n    const offset = 0;\r\n    gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\r\n  }\r\n\r\n  // Update the rotation for the next draw\r\n\r\n  cubeRotation += deltaTime;\r\n}\r\n\r\n//\r\n// Initialize a shader program, so WebGL knows how to draw our data\r\n//\r\nfunction initShaderProgram(gl, vsSource, fsSource) {\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n  // Create the shader program\r\n\r\n  const shaderProgram = gl.createProgram();\r\n  gl.attachShader(shaderProgram, vertexShader);\r\n  gl.attachShader(shaderProgram, fragmentShader);\r\n  gl.linkProgram(shaderProgram);\r\n\r\n  // If creating the shader program failed, alert\r\n\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    console.log('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n    return null;\r\n  }\r\n\r\n  return shaderProgram;\r\n}\r\n\r\n//\r\n// creates a shader of the given type, uploads the source and\r\n// compiles it.\r\n//\r\nfunction loadShader(gl, type, source) {\r\n  const shader = gl.createShader(type);\r\n\r\n  // Send the source to the shader object\r\n\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader program\r\n\r\n  gl.compileShader(shader);\r\n\r\n  // See if it compiled successfully\r\n\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    console.log('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\nexport default CubeRender;","import CubeRender from \"./cuberender.js\";\r\nimport RectRender from \"./rectrender.js\";\r\nimport BaseRender from \"./baserender.js\";\r\nimport CylinderRender from \"./cylinderrender.js\";\r\nimport HemisphereRender from \"./hemisphererender.js\"\r\n\r\nfunction createContextGL($canvas) {\r\n    let gl = null;\r\n\r\n    const validContextNames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\r\n    let nameIndex = 0;\r\n\r\n    while (!gl && nameIndex < validContextNames.length) {\r\n        const contextName = validContextNames[nameIndex];\r\n\r\n        try {\r\n            let contextOptions = {preserveDrawingBuffer: true};\r\n            gl = $canvas.getContext(contextName, contextOptions);\r\n        } catch (e) {\r\n            gl = null;\r\n        }\r\n\r\n        if (!gl || typeof gl.getParameter !== \"function\") {\r\n            gl = null;\r\n        }\r\n\r\n        ++nameIndex;\r\n    }\r\n\r\n\r\n    return gl;\r\n}\r\n\r\nclass WebGLRender {\r\n\r\n    _gl;\r\n\r\n    _render;\r\n\r\n    constructor(canvas) {\r\n\r\n        this._gl = createContextGL(canvas);\r\n\r\n        this._render = new CubeRender(this._gl, canvas.width, canvas.height);\r\n\r\n    }\r\n\r\n    updateTexture(rgbabuf, width, height) {\r\n\r\n        this._render.updateTexture(rgbabuf, width, height);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default WebGLRender;","\r\nimport WebGLRender from \"./webglrender.js\";\r\n\r\n\r\nclass CanvasRender {\r\n\r\n    _avplayer;\r\n\r\n    _webglrender;\r\n\r\n    constructor(avplayer) {\r\n\r\n        this._avplayer = avplayer;\r\n        \r\n        let canvasElement = document.createElement(\"canvas\");\r\n        canvasElement.style.position = \"relative\";\r\n        canvasElement.style.top = '50px';\r\n        canvasElement.style.left = '50px';\r\n\r\n        canvasElement.width = 640;\r\n        canvasElement.height = 640;\r\n\r\n        this._videoElement = canvasElement;\r\n        avplayer._container.appendChild(this._videoElement);\r\n\r\n        this._webglrender = new WebGLRender(canvasElement, canvasElement.width, canvasElement.height)\r\n\r\n    }\r\n\r\n    updateTexture(rgbabuf, width, height) {\r\n\r\n        this._webglrender.updateTexture(rgbabuf, width, height);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default CanvasRender;","\r\n\r\nclass Logger {\r\n\r\n    _logEnable = false; \r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setLogEnable(logEnable) {\r\n\r\n        this._logEnable = logEnable;\r\n    }\r\n\r\n    info(module, ...args)  {\r\n        if (this._logEnable) {\r\n            console.log(`AVPlayer: [${module}]`, ...args);\r\n        }\r\n    }\r\n\r\n    warn (module, ...args) {\r\n        if (this._logEnable) {\r\n            console.warn(`AVPlayer: [${module}]`, ...args);\r\n        }\r\n    }\r\n\r\n    error(module, ...args) {\r\n        if (this._logEnable) {\r\n            console.error(`AVPlayer: [${module}]`, ...args);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Logger;\r\n","class EventEmitter {\r\n    on(name, fn, ctx) {\r\n        const e = this.e || (this.e = {});\r\n        (e[name] || (e[name] = [])).push({fn, ctx});\r\n        return this;\r\n    }\r\n\r\n    once(name, fn, ctx) {\r\n        const self = this;\r\n\r\n        function listener(...args) {\r\n            self.off(name, listener);\r\n            fn.apply(ctx, args);\r\n        }\r\n\r\n        listener._ = fn;\r\n        return this.on(name, listener, ctx);\r\n    }\r\n\r\n    emit(name, ...data) {\r\n        const evtArr = ((this.e || (this.e = {}))[name] || []).slice();\r\n        for (let i = 0; i < evtArr.length; i += 1) {\r\n            evtArr[i].fn.apply(evtArr[i].ctx, data);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    off(name, callback) {\r\n        const e = this.e || (this.e = {});\r\n\r\n        if (!name) {\r\n            Object.keys(e).forEach((key) => {\r\n                delete e[key];\r\n            })\r\n            delete this.e\r\n            return;\r\n        }\r\n\r\n        const evts = e[name];\r\n        const liveEvents = [];\r\n        if (evts && callback) {\r\n            for (let i = 0, len = evts.length; i < len; i += 1) {\r\n                if (evts[i].fn !== callback && evts[i].fn._ !== callback) liveEvents.push(evts[i]);\r\n            }\r\n        }\r\n        if (liveEvents.length) {\r\n            e[name] = liveEvents;\r\n        } else {\r\n            delete e[name];\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nexport default  EventEmitter;","\r\nclass Bitop {\r\n    \r\n    constructor(buffer) {\r\n      this.buffer = buffer;\r\n      this.buflen = buffer.length;\r\n      this.bufpos = 0;\r\n      this.bufoff = 0;\r\n      this.iserro = false;\r\n    }\r\n  \r\n    read(n) {\r\n      let v = 0;\r\n      let d = 0;\r\n      while (n) {\r\n        if (n < 0 || this.bufpos >= this.buflen) {\r\n          this.iserro = true;\r\n          return 0;\r\n        }\r\n  \r\n        this.iserro = false;\r\n        d = this.bufoff + n > 8 ? 8 - this.bufoff : n;\r\n  \r\n        v <<= d;\r\n        v += (this.buffer[this.bufpos] >> (8 - this.bufoff - d)) & (0xff >> (8 - d));\r\n  \r\n        this.bufoff += d;\r\n        n -= d;\r\n  \r\n        if (this.bufoff == 8) {\r\n          this.bufpos++;\r\n          this.bufoff = 0;\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n  \r\n    look(n) {\r\n      let p = this.bufpos;\r\n      let o = this.bufoff;\r\n      let v = this.read(n);\r\n      this.bufpos = p;\r\n      this.bufoff = o;\r\n      return v;\r\n    }\r\n  \r\n    read_golomb() {\r\n      let n;\r\n      for (n = 0; this.read(1) == 0 && !this.iserro; n++);\r\n      return (1 << n) + this.read(n) - 1;\r\n    }\r\n  }\r\n  \r\n  export default Bitop;\r\n  ","//\r\n//  Created by Mingliang Chen on 17/12/21.\r\n//  illuspas[a]gmail.com\r\n//  Copyright (c) 2018 Nodemedia. All rights reserved.\r\n//\r\n\r\nimport Bitop from './bitop.js';\r\n\r\nconst AAC_SAMPLE_RATE = [\r\n  96000, 88200, 64000, 48000,\r\n  44100, 32000, 24000, 22050,\r\n  16000, 12000, 11025, 8000,\r\n  7350, 0, 0, 0\r\n];\r\n\r\nconst AAC_CHANNELS = [\r\n  0, 1, 2, 3, 4, 5, 6, 8\r\n];\r\n\r\nconst AUDIO_CODEC_NAME = [\r\n  '',\r\n  'ADPCM',\r\n  'MP3',\r\n  'LinearLE',\r\n  'Nellymoser16',\r\n  'Nellymoser8',\r\n  'Nellymoser',\r\n  'G711A',\r\n  'G711U',\r\n  '',\r\n  'AAC',\r\n  'Speex',\r\n  '',\r\n  'OPUS',\r\n  'MP3-8K',\r\n  'DeviceSpecific',\r\n  'Uncompressed'\r\n];\r\n\r\nconst AUDIO_SOUND_RATE = [\r\n  5512, 11025, 22050, 44100\r\n];\r\n\r\nconst VIDEO_CODEC_NAME = [\r\n  '',\r\n  'Jpeg',\r\n  'Sorenson-H263',\r\n  'ScreenVideo',\r\n  'On2-VP6',\r\n  'On2-VP6-Alpha',\r\n  'ScreenVideo2',\r\n  'H264',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  'H265'\r\n];\r\n\r\nfunction getObjectType(bitop) {\r\n  let audioObjectType = bitop.read(5);\r\n  if (audioObjectType === 31) {\r\n    audioObjectType = bitop.read(6) + 32;\r\n  }\r\n  return audioObjectType;\r\n}\r\n\r\nfunction getSampleRate(bitop, info) {\r\n  info.sampling_index = bitop.read(4);\r\n  return info.sampling_index == 0x0f ? bitop.read(24) : AAC_SAMPLE_RATE[info.sampling_index];\r\n}\r\n\r\nfunction readAACSpecificConfig(aacSequenceHeader) {\r\n  let info = {};\r\n  let bitop = new Bitop(aacSequenceHeader);\r\n  bitop.read(16);\r\n  info.object_type = getObjectType(bitop);\r\n  info.sample_rate = getSampleRate(bitop, info);\r\n  info.chan_config = bitop.read(4);\r\n  if (info.chan_config < AAC_CHANNELS.length) {\r\n    info.channels = AAC_CHANNELS[info.chan_config];\r\n  }\r\n  info.sbr = -1;\r\n  info.ps = -1;\r\n  if (info.object_type == 5 || info.object_type == 29) {\r\n    if (info.object_type == 29) {\r\n      info.ps = 1;\r\n    }\r\n    info.ext_object_type = 5;\r\n    info.sbr = 1;\r\n    info.sample_rate = getSampleRate(bitop, info);\r\n    info.object_type = getObjectType(bitop);\r\n  }\r\n\r\n  return info;\r\n}\r\n\r\nfunction getAACProfileName(info) {\r\n  switch (info.object_type) {\r\n    case 1:\r\n      return 'Main';\r\n    case 2:\r\n      if (info.ps > 0) {\r\n        return 'HEv2';\r\n      }\r\n      if (info.sbr > 0) {\r\n        return 'HE';\r\n      }\r\n      return 'LC';\r\n    case 3:\r\n      return 'SSR';\r\n    case 4:\r\n      return 'LTP';\r\n    case 5:\r\n      return 'SBR';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction readH264SpecificConfig(avcSequenceHeader) {\r\n  let info = {};\r\n  let profile_idc, width, height, crop_left, crop_right,\r\n    crop_top, crop_bottom, frame_mbs_only, n, cf_idc,\r\n    num_ref_frames;\r\n  let bitop = new Bitop(avcSequenceHeader);\r\n  bitop.read(48);\r\n  info.width = 0;\r\n  info.height = 0;\r\n\r\n  do {\r\n    info.profile = bitop.read(8);\r\n    info.compat = bitop.read(8);\r\n    info.level = bitop.read(8);\r\n    info.nalu = (bitop.read(8) & 0x03) + 1;\r\n    info.nb_sps = bitop.read(8) & 0x1F;\r\n    if (info.nb_sps == 0) {\r\n      break;\r\n    }\r\n    /* nal size */\r\n    bitop.read(16);\r\n\r\n    /* nal type */\r\n    if (bitop.read(8) != 0x67) {\r\n      break;\r\n    }\r\n    /* SPS */\r\n    profile_idc = bitop.read(8);\r\n\r\n    /* flags */\r\n    bitop.read(8);\r\n\r\n    /* level idc */\r\n    bitop.read(8);\r\n\r\n    /* SPS id */\r\n    bitop.read_golomb();\r\n\r\n    if (profile_idc == 100 || profile_idc == 110 ||\r\n      profile_idc == 122 || profile_idc == 244 || profile_idc == 44 ||\r\n      profile_idc == 83 || profile_idc == 86 || profile_idc == 118) {\r\n      /* chroma format idc */\r\n      cf_idc = bitop.read_golomb();\r\n\r\n      if (cf_idc == 3) {\r\n\r\n        /* separate color plane */\r\n        bitop.read(1);\r\n      }\r\n\r\n      /* bit depth luma - 8 */\r\n      bitop.read_golomb();\r\n\r\n      /* bit depth chroma - 8 */\r\n      bitop.read_golomb();\r\n\r\n      /* qpprime y zero transform bypass */\r\n      bitop.read(1);\r\n\r\n      /* seq scaling matrix present */\r\n      if (bitop.read(1)) {\r\n\r\n        for (n = 0; n < (cf_idc != 3 ? 8 : 12); n++) {\r\n\r\n          /* seq scaling list present */\r\n          if (bitop.read(1)) {\r\n\r\n            /* TODO: scaling_list()\r\n            if (n < 6) {\r\n            } else {\r\n            }\r\n            */\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /* log2 max frame num */\r\n    bitop.read_golomb();\r\n\r\n    /* pic order cnt type */\r\n    switch (bitop.read_golomb()) {\r\n      case 0:\r\n\r\n        /* max pic order cnt */\r\n        bitop.read_golomb();\r\n        break;\r\n\r\n      case 1:\r\n\r\n        /* delta pic order alwys zero */\r\n        bitop.read(1);\r\n\r\n        /* offset for non-ref pic */\r\n        bitop.read_golomb();\r\n\r\n        /* offset for top to bottom field */\r\n        bitop.read_golomb();\r\n\r\n        /* num ref frames in pic order */\r\n        num_ref_frames = bitop.read_golomb();\r\n\r\n        for (n = 0; n < num_ref_frames; n++) {\r\n\r\n          /* offset for ref frame */\r\n          bitop.read_golomb();\r\n        }\r\n    }\r\n\r\n    /* num ref frames */\r\n    info.avc_ref_frames = bitop.read_golomb();\r\n\r\n    /* gaps in frame num allowed */\r\n    bitop.read(1);\r\n\r\n    /* pic width in mbs - 1 */\r\n    width = bitop.read_golomb();\r\n\r\n    /* pic height in map units - 1 */\r\n    height = bitop.read_golomb();\r\n\r\n    /* frame mbs only flag */\r\n    frame_mbs_only = bitop.read(1);\r\n\r\n    if (!frame_mbs_only) {\r\n\r\n      /* mbs adaprive frame field */\r\n      bitop.read(1);\r\n    }\r\n\r\n    /* direct 8x8 inference flag */\r\n    bitop.read(1);\r\n\r\n    /* frame cropping */\r\n    if (bitop.read(1)) {\r\n\r\n      crop_left = bitop.read_golomb();\r\n      crop_right = bitop.read_golomb();\r\n      crop_top = bitop.read_golomb();\r\n      crop_bottom = bitop.read_golomb();\r\n\r\n    } else {\r\n      crop_left = 0;\r\n      crop_right = 0;\r\n      crop_top = 0;\r\n      crop_bottom = 0;\r\n    }\r\n    info.level = info.level / 10.0;\r\n    info.width = (width + 1) * 16 - (crop_left + crop_right) * 2;\r\n    info.height = (2 - frame_mbs_only) * (height + 1) * 16 - (crop_top + crop_bottom) * 2;\r\n\r\n  } while (0);\r\n\r\n  return info;\r\n}\r\n\r\nfunction HEVCParsePtl(bitop, hevc, max_sub_layers_minus1) {\r\n  let general_ptl = {};\r\n\r\n  general_ptl.profile_space = bitop.read(2);\r\n  general_ptl.tier_flag = bitop.read(1);\r\n  general_ptl.profile_idc = bitop.read(5);\r\n  general_ptl.profile_compatibility_flags = bitop.read(32);\r\n  general_ptl.general_progressive_source_flag = bitop.read(1);\r\n  general_ptl.general_interlaced_source_flag = bitop.read(1);\r\n  general_ptl.general_non_packed_constraint_flag = bitop.read(1);\r\n  general_ptl.general_frame_only_constraint_flag = bitop.read(1);\r\n  bitop.read(32);\r\n  bitop.read(12);\r\n  general_ptl.level_idc = bitop.read(8);\r\n\r\n  general_ptl.sub_layer_profile_present_flag = [];\r\n  general_ptl.sub_layer_level_present_flag = [];\r\n\r\n  for (let i = 0; i < max_sub_layers_minus1; i++) {\r\n    general_ptl.sub_layer_profile_present_flag[i] = bitop.read(1);\r\n    general_ptl.sub_layer_level_present_flag[i] = bitop.read(1);\r\n  }\r\n\r\n  if (max_sub_layers_minus1 > 0) {\r\n    for (let i = max_sub_layers_minus1; i < 8; i++) {\r\n      bitop.read(2);\r\n    }\r\n  }\r\n\r\n  general_ptl.sub_layer_profile_space = [];\r\n  general_ptl.sub_layer_tier_flag = [];\r\n  general_ptl.sub_layer_profile_idc = [];\r\n  general_ptl.sub_layer_profile_compatibility_flag = [];\r\n  general_ptl.sub_layer_progressive_source_flag = [];\r\n  general_ptl.sub_layer_interlaced_source_flag = [];\r\n  general_ptl.sub_layer_non_packed_constraint_flag = [];\r\n  general_ptl.sub_layer_frame_only_constraint_flag = [];\r\n  general_ptl.sub_layer_level_idc = [];\r\n\r\n  for (let i = 0; i < max_sub_layers_minus1; i++) {\r\n    if (general_ptl.sub_layer_profile_present_flag[i]) {\r\n      general_ptl.sub_layer_profile_space[i] = bitop.read(2);\r\n      general_ptl.sub_layer_tier_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_profile_idc[i] = bitop.read(5);\r\n      general_ptl.sub_layer_profile_compatibility_flag[i] = bitop.read(32);\r\n      general_ptl.sub_layer_progressive_source_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_interlaced_source_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_non_packed_constraint_flag[i] = bitop.read(1);\r\n      general_ptl.sub_layer_frame_only_constraint_flag[i] = bitop.read(1);\r\n      bitop.read(32);\r\n      bitop.read(12);\r\n    }\r\n    if (general_ptl.sub_layer_level_present_flag[i]) {\r\n      general_ptl.sub_layer_level_idc[i] = bitop.read(8);\r\n    }\r\n    else {\r\n      general_ptl.sub_layer_level_idc[i] = 1;\r\n    }\r\n  }\r\n  return general_ptl;\r\n}\r\n\r\nfunction HEVCParseSPS(SPS, hevc) {\r\n  let psps = {};\r\n  let NumBytesInNALunit = SPS.length;\r\n  let NumBytesInRBSP = 0;\r\n  let rbsp_array = [];\r\n  let bitop = new Bitop(SPS);\r\n\r\n  bitop.read(1);//forbidden_zero_bit\r\n  bitop.read(6);//nal_unit_type\r\n  bitop.read(6);//nuh_reserved_zero_6bits\r\n  bitop.read(3);//nuh_temporal_id_plus1\r\n\r\n  for (let i = 2; i < NumBytesInNALunit; i++) {\r\n    if (i + 2 < NumBytesInNALunit && bitop.look(24) == 0x000003) {\r\n      rbsp_array.push(bitop.read(8));\r\n      rbsp_array.push(bitop.read(8));\r\n      i += 2;\r\n      let emulation_prevention_three_byte = bitop.read(8); /* equal to 0x03 */\r\n    } else {\r\n      rbsp_array.push(bitop.read(8));\r\n    }\r\n  }\r\n  let rbsp =  new Uint8Array(rbsp_array);\r\n  let rbspBitop = new Bitop(rbsp);\r\n  psps.sps_video_parameter_set_id = rbspBitop.read(4);\r\n  psps.sps_max_sub_layers_minus1 = rbspBitop.read(3);\r\n  psps.sps_temporal_id_nesting_flag = rbspBitop.read(1);\r\n  psps.profile_tier_level = HEVCParsePtl(rbspBitop, hevc, psps.sps_max_sub_layers_minus1);\r\n  psps.sps_seq_parameter_set_id = rbspBitop.read_golomb();\r\n  psps.chroma_format_idc = rbspBitop.read_golomb();\r\n  if (psps.chroma_format_idc == 3) {\r\n    psps.separate_colour_plane_flag = rbspBitop.read(1);\r\n  } else {\r\n    psps.separate_colour_plane_flag = 0;\r\n  }\r\n  psps.pic_width_in_luma_samples = rbspBitop.read_golomb();\r\n  psps.pic_height_in_luma_samples = rbspBitop.read_golomb();\r\n  psps.conformance_window_flag = rbspBitop.read(1);\r\n  if (psps.conformance_window_flag) {\r\n    let vert_mult = 1 + (psps.chroma_format_idc < 2);\r\n    let horiz_mult = 1 + (psps.chroma_format_idc < 3);\r\n    psps.conf_win_left_offset = rbspBitop.read_golomb() * horiz_mult;\r\n    psps.conf_win_right_offset = rbspBitop.read_golomb() * horiz_mult;\r\n    psps.conf_win_top_offset = rbspBitop.read_golomb() * vert_mult;\r\n    psps.conf_win_bottom_offset = rbspBitop.read_golomb() * vert_mult;\r\n  }\r\n  // Logger.debug(psps);\r\n  return psps;\r\n}\r\n\r\nfunction readHEVCSpecificConfig(hevcSequenceHeader) {\r\n  let info = {};\r\n  info.width = 0;\r\n  info.height = 0;\r\n  info.profile = 0;\r\n  info.level = 0;\r\n  // let bitop = new Bitop(hevcSequenceHeader);\r\n  // bitop.read(48);\r\n  hevcSequenceHeader = hevcSequenceHeader.slice(5);\r\n\r\n  do {\r\n    let hevc = {};\r\n    if (hevcSequenceHeader.length < 23) {\r\n      break;\r\n    }\r\n\r\n    hevc.configurationVersion = hevcSequenceHeader[0];\r\n    if (hevc.configurationVersion != 1) {\r\n      break;\r\n    }\r\n    hevc.general_profile_space = (hevcSequenceHeader[1] >> 6) & 0x03;\r\n    hevc.general_tier_flag = (hevcSequenceHeader[1] >> 5) & 0x01;\r\n    hevc.general_profile_idc = hevcSequenceHeader[1] & 0x1F;\r\n    hevc.general_profile_compatibility_flags = (hevcSequenceHeader[2] << 24) | (hevcSequenceHeader[3] << 16) | (hevcSequenceHeader[4] << 8) | hevcSequenceHeader[5];\r\n    hevc.general_constraint_indicator_flags = ((hevcSequenceHeader[6] << 24) | (hevcSequenceHeader[7] << 16) | (hevcSequenceHeader[8] << 8) | hevcSequenceHeader[9]);\r\n    hevc.general_constraint_indicator_flags = (hevc.general_constraint_indicator_flags << 16) | (hevcSequenceHeader[10] << 8) | hevcSequenceHeader[11];\r\n    hevc.general_level_idc = hevcSequenceHeader[12];\r\n    hevc.min_spatial_segmentation_idc = ((hevcSequenceHeader[13] & 0x0F) << 8) | hevcSequenceHeader[14];\r\n    hevc.parallelismType = hevcSequenceHeader[15] & 0x03;\r\n    hevc.chromaFormat = hevcSequenceHeader[16] & 0x03;\r\n    hevc.bitDepthLumaMinus8 = hevcSequenceHeader[17] & 0x07;\r\n    hevc.bitDepthChromaMinus8 = hevcSequenceHeader[18] & 0x07;\r\n    hevc.avgFrameRate = (hevcSequenceHeader[19] << 8) | hevcSequenceHeader[20];\r\n    hevc.constantFrameRate = (hevcSequenceHeader[21] >> 6) & 0x03;\r\n    hevc.numTemporalLayers = (hevcSequenceHeader[21] >> 3) & 0x07;\r\n    hevc.temporalIdNested = (hevcSequenceHeader[21] >> 2) & 0x01;\r\n    hevc.lengthSizeMinusOne = hevcSequenceHeader[21] & 0x03;\r\n    let numOfArrays = hevcSequenceHeader[22];\r\n    let p = hevcSequenceHeader.slice(23);\r\n    for (let i = 0; i < numOfArrays; i++) {\r\n      if (p.length < 3) {\r\n        brak;\r\n      }\r\n      let nalutype = p[0];\r\n      let n = (p[1]) << 8 | p[2];\r\n      // Logger.debug(nalutype, n);\r\n      p = p.slice(3);\r\n      for (let j = 0; j < n; j++) {\r\n        if (p.length < 2) {\r\n          break;\r\n        }\r\n        let k = (p[0] << 8) | p[1];\r\n        // Logger.debug('k', k);\r\n        if (p.length < 2 + k) {\r\n          break;\r\n        }\r\n        p = p.slice(2);\r\n        if (nalutype == 33) {\r\n          //SPS\r\n          let sps = new Uint8Array(k);\r\n          sps.set(p.slice(0, k), 0);\r\n          // Logger.debug(sps, sps.length);\r\n          hevc.psps = HEVCParseSPS(sps, hevc);\r\n          info.profile = hevc.general_profile_idc;\r\n          info.level = hevc.general_level_idc / 30.0;\r\n          info.width = hevc.psps.pic_width_in_luma_samples - (hevc.psps.conf_win_left_offset + hevc.psps.conf_win_right_offset);\r\n          info.height = hevc.psps.pic_height_in_luma_samples - (hevc.psps.conf_win_top_offset + hevc.psps.conf_win_bottom_offset);\r\n        }\r\n        p = p.slice(k);\r\n      }\r\n    }\r\n  } while (0);\r\n\r\n  return info;\r\n}\r\n\r\nfunction readAVCSpecificConfig(avcSequenceHeader) {\r\n  let codec_id = avcSequenceHeader[0] & 0x0f;\r\n  if (codec_id == 7) {\r\n    return readH264SpecificConfig(avcSequenceHeader);\r\n  } else if (codec_id == 12) {\r\n    return readHEVCSpecificConfig(avcSequenceHeader);\r\n  }\r\n}\r\n\r\n\r\nfunction getAVCProfileName(info) {\r\n  switch (info.profile) {\r\n    case 1:\r\n      return 'Main';\r\n    case 2:\r\n      return 'Main 10';\r\n    case 3:\r\n      return 'Main Still Picture';\r\n    case 66:\r\n      return 'Baseline';\r\n    case 77:\r\n      return 'Main';\r\n    case 100:\r\n      return 'High';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  AUDIO_SOUND_RATE,\r\n  AUDIO_CODEC_NAME,\r\n  VIDEO_CODEC_NAME,\r\n  readAACSpecificConfig,\r\n  getAACProfileName,\r\n  readAVCSpecificConfig,\r\n  getAVCProfileName,\r\n};\r\n","\r\nclass AVPacket {\r\n\r\n    payload;\r\n    avtype;\r\n    timestamp;\r\n    nals;\r\n    iskeyframe;\r\n    \r\n}\r\n\r\n\r\nclass VideoInfo {\r\n\r\n    vtype;\r\n    width;\r\n    height;\r\n}\r\n\r\n\r\nclass AudioInfo {\r\n\r\n    atype;\r\n    sample;\r\n    channels;\r\n    depth;\r\n    profile;\r\n   \r\n}\r\n\r\n\r\n\r\nexport {AVPacket, VideoInfo, AudioInfo};","\r\n\r\n const AVType = {\r\n\r\n    Video: 0x1,\r\n    Audio: 0x2\r\n\r\n};\r\n\r\n const VideoType = {\r\n\r\n    H264: 0x1,\r\n    H265: 0x2\r\n\r\n};\r\n\r\nconst AudioType = {\r\n\r\n    PCM:   0x1,\r\n    PCMA:  0x2,\r\n    PCMU:  0x4,\r\n    AAC:   0x8\r\n\r\n};\r\n\r\nconst AACProfile = {\r\n    AAC_MAIN: 1,\r\n    AAC_LC: 2,\r\n    AAC_SSR: 3\r\n};\r\n\r\nconst PixelType = {\r\n\r\n    YUV:   0x1,\r\n    RGBA:  0x2,\r\n};\r\n\r\nconst ADTS_HEADER_SIZE = 7;\r\n\r\nconst AAC_SAMPLE_RATE = [\r\n    96000, 88200, 64000, 48000,\r\n    44100, 32000, 24000, 22050,\r\n    16000, 12000, 11025, 8000,\r\n    7350, 0, 0, 0\r\n  ];\r\n\r\nexport {AVType, VideoType, AudioType, PixelType, ADTS_HEADER_SIZE, AAC_SAMPLE_RATE, AACProfile};","import EventEmitter from '../utils/events.js';\r\nimport { readAACSpecificConfig, getAACProfileName, readAVCSpecificConfig, getAVCProfileName } from '../utils/specific.js';\r\nimport {AVPacket, VideoInfo, AudioInfo} from '../utils/av.js';\r\nimport {AVType, VideoType, AudioType, PixelType, ADTS_HEADER_SIZE, AAC_SAMPLE_RATE, AACProfile} from '../constant'\r\n\r\n\r\nconst FLV_MEDIA_TYPE = {\r\n    Audio: 8,\r\n    Video: 9,\r\n    Script: 18\r\n}\r\n\r\nconst CodecID = {\r\n\r\n    AVC : 7, //h264\r\n    HEVC : 12 //h265\r\n\r\n}\r\n\r\nconst FrameType = {\r\n\r\n    KeyFrame : 1,\r\n    InterFrame : 2\r\n\r\n}\r\n\r\nconst AVCPacketType = {\r\n\r\n    AVCSequenceHeader : 0,\r\n    AVCNalu : 1,\r\n    \r\n}\r\n\r\n\r\nconst SoundFormat = {\r\n\r\n    G711A : 7,\r\n    G711U : 8,\r\n    AAC : 10\r\n}\r\n\r\nconst SoundRate = {\r\n\r\n    E5_5HZ : 0,\r\n    E11HZ : 1,\r\n    E22HZ : 2,\r\n    E44HZ : 3\r\n\r\n}\r\n\r\nconst SoundSize = {\r\n\r\n    E8BITS : 0,\r\n    E16BITS : 1\r\n\r\n}\r\n\r\nconst SoundType = {\r\n\r\n    Mono : 0,\r\n    Stereo : 1\r\n\r\n}\r\n\r\nconst AACPackettype = {\r\n\r\n    AACSequenceHeader : 0,\r\n    AACRaw : 1\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst FLV_Parse_State = {\r\n    Init: 0,\r\n    TagCommerHeader: 1,\r\n    TagPayload:2\r\n}\r\n\r\nclass FLVDemux extends EventEmitter {\r\n\r\n    _buffer = undefined;\r\n\r\n    _needlen = 0;\r\n    _state = 0;\r\n    _tagtype = 0;\r\n    _dts = 0;\r\n    _pts = 0;\r\n\r\n    _videoinfo;\r\n    _audioinfo;\r\n\r\n    constructor(avplayer) {\r\n\r\n        super();\r\n\r\n        this._avplayer = avplayer;\r\n\r\n        this._videoinfo = new VideoInfo();\r\n        this._audioinfo = new AudioInfo();\r\n\r\n        this._state = FLV_Parse_State.Init;\r\n        this._needlen = 9;\r\n        \r\n    }\r\n\r\n    \r\n    dispatch(data) {\r\n\r\n        let remain = data;\r\n\r\n        if (this._buffer) {\r\n\r\n            let newbuffer = new Uint8Array(this._buffer.length + data.length);\r\n            newbuffer.set(this._buffer, 0);\r\n            newbuffer.set(data, this._buffer.length);\r\n\r\n            remain = newbuffer;\r\n            this._buffer = undefined;\r\n        }\r\n\r\n        const tmp = new ArrayBuffer(4);\r\n        const dv = new DataView(tmp);\r\n\r\n        while(true) {\r\n\r\n            if (remain.length < this._needlen) {\r\n\r\n                break;\r\n            }\r\n\r\n            if (this._state === FLV_Parse_State.Init) {\r\n\r\n                let flvheader = remain.slice(0, this._needlen);\r\n                remain = remain.slice(this._needlen);\r\n\r\n                this._needlen = 15;\r\n                this._state = FLV_Parse_State.TagCommerHeader;\r\n                \r\n            } else if (this._state === FLV_Parse_State.TagCommerHeader) {\r\n\r\n                this._tagtype = remain[4]&0x1F; // 5bit代表类型,8:audio 9:video 18:script other:其他\r\n\r\n                dv.setUint8(0, remain[7]);\r\n                dv.setUint8(1, remain[6]);\r\n                dv.setUint8(2, remain[5]);\r\n                dv.setUint8(3, 0);\r\n\r\n                let payloadlen = dv.getUint32(0, true); //Tag 中除通用头外的长度，即 Header + Data 字段的长度 (等于 Tag 总长度 – 11)\r\n\r\n                dv.setUint8(0, remain[10]);\r\n                dv.setUint8(1, remain[9]);\r\n                dv.setUint8(2, remain[8]);\r\n                dv.setUint8(3, remain[11]);\r\n\r\n                this._dts = dv.getUint32(0, true);\r\n\r\n                let tagcommonheader = remain.slice(0, this._needlen);\r\n                remain = remain.slice(this._needlen);\r\n\r\n                this._needlen = payloadlen;\r\n                this._state = FLV_Parse_State.TagPayload;\r\n\r\n            } else {\r\n\r\n                if (this._tagtype === FLV_MEDIA_TYPE.Video) {\r\n\r\n                    let frametype = (remain[0]>>4)&0x0F;\r\n                    let codecid = (remain[0])&0x0F;\r\n\r\n                    if (codecid === CodecID.AVC || codecid === CodecID.HEVC) {\r\n\r\n                        let avcpackettype = remain[1];\r\n\r\n                        dv.setUint8(0, remain[4]);\r\n                        dv.setUint8(1, remain[3]);\r\n                        dv.setUint8(2, remain[2]);\r\n                        dv.setUint8(3, 0);\r\n\r\n                        let compositiontime = dv.getUint32(0, true);\r\n                        this._pts = this._dts + compositiontime;\r\n\r\n                        if (frametype === FrameType.KeyFrame) {\r\n\r\n                            if (avcpackettype === AVCPacketType.AVCSequenceHeader) {\r\n\r\n\r\n                                 let obj = ParseSPSAndPPS(remain.slice(0, this._needlen));\r\n\r\n                                 this._sps = obj.sps;\r\n                                 this._pps = obj.pps;\r\n\r\n                                 this._avplayer._logger.info('FlvDemux', `parse sps:${this._sps[0]&0x1F} pps:${this._pps[0]&0x1F}`)\r\n\r\n                                //avcseq\r\n                                let info = readAVCSpecificConfig(remain.slice(0, this._needlen));\r\n\r\n                                this._videoinfo.vtype = codecid === CodecID.AVC ? VideoType.H264 : VideoType.H265;\r\n                                this._videoinfo.width = info.width;\r\n                                this._videoinfo.height = info.height\r\n            \r\n                                this.emit('videoinfo', this._videoinfo);\r\n\r\n                            } else if (avcpackettype === AVCPacketType.AVCNalu) {\r\n                                //I Frame\r\n                                let vframe = remain.slice(5, this._needlen);\r\n\r\n                                let packet = new AVPacket();\r\n                                packet.payload = vframe;\r\n                                packet.iskeyframe = true;\r\n                                packet.timestamp = this._pts;\r\n                                packet.avtype = AVType.Video;\r\n                                packet.nals = SplitBufferToNals(vframe);\r\n            \r\n                                this.emit('videodata', packet);\r\n\r\n                            } else {\r\n\r\n\r\n                            }\r\n\r\n\r\n                        } else if (frametype === FrameType.InterFrame) {\r\n\r\n                            if (avcpackettype === AVCPacketType.AVCNalu) {\r\n\r\n                                //P Frame\r\n                                let vframe = remain.slice(5, this._needlen);\r\n\r\n                                \r\n                                let packet = new AVPacket();\r\n                                packet.payload = vframe;\r\n                                packet.iskeyframe = false;\r\n                                packet.timestamp = this._pts;\r\n                                packet.avtype = AVType.Video;\r\n                                packet.nals = SplitBufferToNals(vframe);\r\n\r\n                                this.emit('videodata', packet);\r\n\r\n                            } else {\r\n\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                } else if (this._tagtype === FLV_MEDIA_TYPE.Audio) {\r\n\r\n                    let soundformat = (remain[0]>>4)&0x0F;\r\n                    let soundrate = (remain[0]>>2)&0x02;\r\n                    let soundsize = (remain[0]>>1)&0x01;\r\n                    let soundtype = (remain[0])&0x0F;\r\n\r\n                    if (soundformat === SoundFormat.AAC) {\r\n\r\n                        let aacpackettype = remain[1]; \r\n\r\n                        if (aacpackettype === AACPackettype.AACSequenceHeader) {\r\n\r\n                            let aacinfo = readAACSpecificConfig(remain.slice(0, this._needlen));\r\n\r\n                            \r\n                            this._audioinfo.atype = AudioType.AAC;\r\n                            this._audioinfo.profile = aacinfo.object_type;\r\n                            this._audioinfo.sample = aacinfo.sample_rate;\r\n                            this._audioinfo.channels = aacinfo.chan_config;\r\n                            this._audioinfo.depth = soundsize ? 16 : 8;\r\n\r\n                            this.emit('audioinfo', this._audioinfo);\r\n\r\n                        } else {\r\n\r\n                            let aacraw = remain.slice(2, this._needlen);\r\n\r\n                            let packet = new AVPacket();\r\n                            packet.payload = aacraw;\r\n                            packet.iskeyframe = false;\r\n                            packet.timestamp = this._dts;\r\n                            packet.avtype = AVType.Audio;\r\n    \r\n                            this.emit('audiodata', packet);\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (!this._pcminfosend) {\r\n\r\n                            this._audioinfo.atype = soundformat === SoundFormat.G711A ? AudioType.PCMA : AudioType.PCMU;\r\n                            this._audioinfo.profile = 0;\r\n                            this._audioinfo.sample = 8000;\r\n                            this._audioinfo.channels = 1;\r\n                            this._audioinfo.depth = 16;\r\n\r\n                            this.emit('audioinfo', this._audioinfo);\r\n\r\n                            this._pcminfosend = true;\r\n                        }\r\n\r\n                        let audioraw = remain.slice(1, this._needlen);\r\n\r\n                        \r\n                        let packet = new AVPacket();\r\n                        packet.payload = audioraw;\r\n                        packet.iskeyframe = false;\r\n                        packet.timestamp = this._dts;\r\n                        packet.avtype = AVType.Audio;\r\n\r\n                        this.emit('audiodata', packet);\r\n                    }\r\n\r\n                } else if (this._tagtype === FLV_MEDIA_TYPE.Script) {\r\n\r\n\r\n                } else {\r\n\r\n\r\n                }\r\n\r\n                remain = remain.slice(this._needlen);\r\n\r\n                this._needlen = 15;\r\n                this._state = FLV_Parse_State.TagCommerHeader;\r\n            }\r\n\r\n        }\r\n\r\n        this._buffer = remain;\r\n\r\n\r\n    }\r\n\r\n    destroy() {\r\n\r\n        this.off();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction SplitBufferToNals(buffer) {\r\n\r\n    let nals = [];\r\n    let offset = 0;\r\n\r\n    \r\n    const tmp = new ArrayBuffer(4);\r\n    const dv = new DataView(tmp);\r\n\r\n    while(offset < buffer.length) {\r\n\r\n        dv.setUint8(0, buffer[offset+3]);\r\n        dv.setUint8(1, buffer[offset+2]);\r\n        dv.setUint8(2, buffer[offset+1]);\r\n        dv.setUint8(3, buffer[offset]);\r\n        \r\n        let nallen = dv.getUint32(0, true);\r\n        \r\n        //buf.writeUInt32BE(1, offset);\r\n\r\n        nals.push(buffer.slice(offset, offset + nallen + 4));\r\n        \r\n        offset += 4;\r\n        let naltype = buffer[offset]&0x1F;\r\n\r\n       // console.log(`nal len ${nallen} type:${naltype}`)\r\n        offset += nallen;\r\n    }\r\n\r\n    if (offset != buffer.length) {\r\n\r\n        console.error(`parse nal error, offset:${offset} buflen:${buffer.length}`)\r\n    } else {\r\n      //  console.log(`parse nal suc, offset:${offset} buflen:${buffer.length}`)\r\n\r\n    }\r\n\r\n    return nals;\r\n\r\n}\r\n\r\n\r\nfunction ParseSPSAndPPS(videData) {\r\n\r\n    let avcSequenceHeader = new Uint8Array(videData.length - 5);\r\n    avcSequenceHeader.set(videData.slice(5));\r\n\r\n        \r\n    const tmp = new ArrayBuffer(2);\r\n    const dv = new DataView(tmp);\r\n  \r\n    let offset = 5;\r\n    let spsnum = avcSequenceHeader[offset]&0x1F;\r\n    offset += 1;\r\n\r\n    dv.setInt8(0,avcSequenceHeader[offset+1]);\r\n    dv.setInt8(1,avcSequenceHeader[offset]);\r\n\r\n    let spslen = dv.getUint16(0, true);\r\n    offset += 2;\r\n    let sps = avcSequenceHeader.slice(offset, offset + spslen);\r\n    offset += spslen;\r\n\r\n    let ppsnum = avcSequenceHeader[offset];\r\n    offset += 1;\r\n\r\n    dv.setInt8(0,avcSequenceHeader[offset+1]);\r\n    dv.setInt8(1,avcSequenceHeader[offset]);\r\n    let ppslen =  dv.getUint16(0, true);\r\n    offset += 2;\r\n    let pps = avcSequenceHeader.slice(offset, offset + ppslen);\r\n\r\n    return {sps, pps}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default FLVDemux;","import EventEmitter from '../utils/events.js';\r\n\r\n\r\n\r\nclass FetchStream extends EventEmitter {\r\n\r\n    _avplayer = undefined;\r\n    _abort = undefined;\r\n\r\n    constructor(avplayer) {\r\n\r\n        super();\r\n\r\n        this._avplayer = avplayer;\r\n        this._abort = new AbortController();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        fetch(this._avplayer._options.url, {signal:this._abort.signal}).then((res) => {\r\n            const reader = res.body.getReader();\r\n            \r\n            let fetchNext = async () => {\r\n\r\n                let {done, value} = await reader.read();\r\n\r\n                if (done) {\r\n\r\n                } else {\r\n\r\n                    this._avplayer._demux.dispatch(value);\r\n\r\n                    fetchNext();\r\n                }\r\n\r\n            }\r\n\r\n            fetchNext();\r\n\r\n\r\n        }).catch((e) => {\r\n\r\n            this.stop();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n        if (this._abort) {\r\n\r\n            this._abort.abort();\r\n            this._abort = undefined;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    destroy() {\r\n        this.stop();\r\n        this.off();\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default FetchStream;","import CanvasRender from './render/canvasrender.js';\r\nimport Logger from './utils/logger.js';\r\nimport FLVDemux from './demux/flvdemux.js';\r\nimport FetchStream from './stream/fetchstream.js';\r\n\r\n\r\nconst DEFAULT_PLAYER_OPTIONS = {\r\n\r\n    url:'',\r\n    container:''\r\n\r\n}\r\n\r\nclass AVPlayer {\r\n\r\n    _options = undefined;\r\n\r\n    _render = undefined;\r\n    _logger = undefined;\r\n    _demux = undefined;\r\n    _stream = undefined;\r\n\r\n\r\n    //统计\r\n    _vframerate = 0;\r\n    _vbitrate = 0;\r\n    _aframerate = 0;\r\n    _abitrate = 0;\r\n    _statsec = 2;\r\n    _stattimer = undefined;\r\n\r\n\r\n    constructor(options) {\r\n\r\n        this._logger = new Logger();\r\n        this._logger.setLogEnable(true);\r\n\r\n        this._options = Object.assign({}, DEFAULT_PLAYER_OPTIONS, options);\r\n        this._container = options.container;\r\n\r\n\r\n        this._logger.info('player', `now play ${this._options.url}`);\r\n\r\n\r\n        this._render = new CanvasRender(this);\r\n\r\n        this._demux = new FLVDemux(this);\r\n        this._stream = new FetchStream(this);\r\n\r\n        this.registerEvents();\r\n\r\n        this._stream.start(); \r\n\r\n        this.startStatisc();\r\n\r\n    }\r\n    \r\n    startStatisc() {\r\n\r\n        this._stattimer = setInterval(() => {\r\n            \r\n            this._logger.info('STAT', `------ STAT ---------\r\n            video framerate:${this._vframerate/this._statsec} bitrate:${this._vbitrate*8/this._statsec}\r\n            audio framerate:${this._aframerate/this._statsec} bitrate:${this._abitrate*8/this._statsec}\r\n            `);\r\n\r\n\r\n            this._vframerate = 0;\r\n            this._vbitrate = 0;\r\n            this._aframerate = 0;\r\n            this._abitrate = 0;\r\n\r\n\r\n\r\n\r\n        }, this._statsec*1000);\r\n\r\n    }\r\n\r\n    stopStatic() {\r\n\r\n        if (this._stattimer) {\r\n\r\n            clearInterval(this._stattimer);\r\n            this._stattimer = undefined;\r\n        }\r\n\r\n    }\r\n\r\n    registerEvents() {\r\n\r\n        this._demux.on('videoinfo', (videoinfo) => {\r\n\r\n            this._logger.info('player', `videoinfo vtype:${videoinfo.vtype} width:${videoinfo.width} hight:${videoinfo.height}`);\r\n\r\n        })\r\n\r\n        this._demux.on('audioinfo', (audioinfo) => {\r\n\r\n            this._logger.info('player', `audioinfo atype:${audioinfo.atype} sample:${audioinfo.sample} channels:${audioinfo.channels} depth:${audioinfo.depth} aacprofile:${audioinfo.profile}`);\r\n\r\n        })\r\n\r\n        this._demux.on('videodata', (packet) => {\r\n\r\n            // this._logger.info('player', `recv VideoData ${packet.payload.length} keyframe:${packet.iskeyframe} nals:${packet.nals.length} pts:${packet.timestamp}`);\r\n            // for (let nal of packet.nals) {\r\n\r\n            //     let naltype = nal[4]&0x1F;\r\n            //     this._logger.info('player', `Parse Nal: ${naltype}`)\r\n\r\n            // }\r\n\r\n            this._vframerate++;\r\n            this._vbitrate += packet.payload.length;\r\n\r\n        })\r\n\r\n        this._demux.on('audiodata', (packet) => {\r\n\r\n            this._aframerate++;\r\n            this._abitrate += packet.payload.length;\r\n          //  this._logger.info('player', `recv AudioData ${packet.payload.length} pts:${packet.timestamp}`);\r\n        })\r\n\r\n    }\r\n\r\n    updateTexture(rgbabuf, width, height) {\r\n\r\n        this._render.updateTexture(rgbabuf, width, height);\r\n    }\r\n\r\n\r\n}\r\n\r\nwindow.AVPlayer = AVPlayer;\r\n\r\nexport default AVPlayer;"],"names":["BaseRender","constructor","create","glMatrix.ARRAY_TYPE","glMatrix.EPSILON","vsSource","fsSource","cubeRotation","CubeRender","_gl","undefined","_width","_height","gl","width","height","pixelStorei","UNPACK_ALIGNMENT","shaderProgram","initShaderProgram","programInfo","program","attribLocations","vertexPosition","getAttribLocation","texturePosition","uniformLocations","projectionMatrix","getUniformLocation","modelMatrix","viewMatrix","texture","buffers","initBuffers","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","_texture","deltaTime","setInterval","drawScene","updateTexture","rgbabuf","textunit","activeTexture","TEXTURE0","texImage2D","RGBA","UNSIGNED_BYTE","getRGBA","pixels","Uint8Array","readPixels","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","Float32Array","STATIC_DRAW","facePos","texturePos","concat","texpositionBuffer","indexBuffer","ELEMENT_ARRAY_BUFFER","indices","Uint16Array","position","texposition","viewport","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","fieldOfView","Math","PI","aspect","zNear","zFar","mat4","vec3","numComponents","type","FLOAT","normalize","stride","offset","vertexAttribPointer","enableVertexAttribArray","useProgram","uniformMatrix4fv","uniform1i","vertexCount","UNSIGNED_SHORT","drawElements","TRIANGLES","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","log","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createContextGL","$canvas","validContextNames","nameIndex","length","contextName","contextOptions","preserveDrawingBuffer","getContext","e","getParameter","WebGLRender","_render","canvas","CanvasRender","_avplayer","_webglrender","avplayer","canvasElement","document","createElement","style","top","left","_videoElement","_container","appendChild","Logger","_logEnable","setLogEnable","logEnable","info","module","args","warn","error","EventEmitter","on","name","fn","ctx","push","once","self","listener","off","apply","_","emit","evtArr","slice","data","i","callback","Object","keys","forEach","key","evts","liveEvents","len","Bitop","buffer","buflen","bufpos","bufoff","iserro","read","n","v","d","look","p","o","read_golomb","AAC_SAMPLE_RATE","AAC_CHANNELS","getObjectType","bitop","audioObjectType","getSampleRate","sampling_index","readAACSpecificConfig","aacSequenceHeader","object_type","sample_rate","chan_config","channels","sbr","ps","ext_object_type","readH264SpecificConfig","avcSequenceHeader","profile_idc","crop_left","crop_right","crop_top","crop_bottom","frame_mbs_only","cf_idc","num_ref_frames","profile","compat","level","nalu","nb_sps","avc_ref_frames","HEVCParsePtl","hevc","max_sub_layers_minus1","general_ptl","profile_space","tier_flag","profile_compatibility_flags","general_progressive_source_flag","general_interlaced_source_flag","general_non_packed_constraint_flag","general_frame_only_constraint_flag","level_idc","sub_layer_profile_present_flag","sub_layer_level_present_flag","sub_layer_profile_space","sub_layer_tier_flag","sub_layer_profile_idc","sub_layer_profile_compatibility_flag","sub_layer_progressive_source_flag","sub_layer_interlaced_source_flag","sub_layer_non_packed_constraint_flag","sub_layer_frame_only_constraint_flag","sub_layer_level_idc","HEVCParseSPS","SPS","psps","NumBytesInNALunit","rbsp_array","rbsp","rbspBitop","sps_video_parameter_set_id","sps_max_sub_layers_minus1","sps_temporal_id_nesting_flag","profile_tier_level","sps_seq_parameter_set_id","chroma_format_idc","separate_colour_plane_flag","pic_width_in_luma_samples","pic_height_in_luma_samples","conformance_window_flag","vert_mult","horiz_mult","conf_win_left_offset","conf_win_right_offset","conf_win_top_offset","conf_win_bottom_offset","readHEVCSpecificConfig","hevcSequenceHeader","configurationVersion","general_profile_space","general_tier_flag","general_profile_idc","general_profile_compatibility_flags","general_constraint_indicator_flags","general_level_idc","min_spatial_segmentation_idc","parallelismType","chromaFormat","bitDepthLumaMinus8","bitDepthChromaMinus8","avgFrameRate","constantFrameRate","numTemporalLayers","temporalIdNested","lengthSizeMinusOne","numOfArrays","brak","nalutype","j","k","sps","set","readAVCSpecificConfig","codec_id","AVPacket","payload","avtype","timestamp","nals","iskeyframe","VideoInfo","vtype","AudioInfo","atype","sample","depth","AVType","Video","Audio","VideoType","H264","H265","AudioType","PCM","PCMA","PCMU","AAC","FLV_MEDIA_TYPE","Script","CodecID","AVC","HEVC","FrameType","KeyFrame","InterFrame","AVCPacketType","AVCSequenceHeader","AVCNalu","SoundFormat","G711A","G711U","AACPackettype","AACSequenceHeader","AACRaw","FLV_Parse_State","Init","TagCommerHeader","TagPayload","FLVDemux","_buffer","_needlen","_state","_tagtype","_dts","_pts","_videoinfo","_audioinfo","dispatch","remain","newbuffer","tmp","ArrayBuffer","dv","DataView","setUint8","payloadlen","getUint32","frametype","codecid","avcpackettype","compositiontime","obj","ParseSPSAndPPS","_sps","_pps","pps","_logger","vframe","packet","SplitBufferToNals","soundformat","soundsize","aacpackettype","aacinfo","aacraw","_pcminfosend","audioraw","destroy","nallen","videData","setInt8","spslen","getUint16","ppslen","FetchStream","_abort","AbortController","start","fetch","_options","url","signal","then","res","reader","body","getReader","fetchNext","done","value","_demux","catch","stop","abort","DEFAULT_PLAYER_OPTIONS","container","AVPlayer","_stream","_vframerate","_vbitrate","_aframerate","_abitrate","_statsec","_stattimer","options","assign","registerEvents","startStatisc","stopStatic","clearInterval","videoinfo","audioinfo","window"],"mappings":"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"}